<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>矮子高-博客</title>
  
  <subtitle>个人博客</subtitle>
  <link href="http://aizigao.xyz/atom.xml" rel="self"/>
  
  <link href="http://aizigao.xyz/"/>
  <updated>2023-08-20T14:50:08.875Z</updated>
  <id>http://aizigao.xyz/</id>
  
  <author>
    <name>矮子高</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何在lottie-web 加载zip文件</title>
    <link href="http://aizigao.xyz/2023/08/20/%E5%A6%82%E4%BD%95%E5%9C%A8lottie-web-%E5%8A%A0%E8%BD%BDzip%E6%96%87%E4%BB%B6/"/>
    <id>http://aizigao.xyz/2023/08/20/%E5%A6%82%E4%BD%95%E5%9C%A8lottie-web-%E5%8A%A0%E8%BD%BDzip%E6%96%87%E4%BB%B6/</id>
    <published>2023-08-20T10:28:48.000Z</published>
    <updated>2023-08-20T14:50:08.875Z</updated>
    
    <content type="html"><![CDATA[<p><ul class="markdownIt-TOC"><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#%E6%96%B9%E6%A1%88">方案</a></li><li><a href="#%E8%BF%87%E7%A8%8B%E4%B8%8E%E8%A7%A3%E6%9E%90">过程与解析</a></li></ul></p><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>公司刚好有个需求需要用 web 加载一个 zip 的 lottie 的配置文件，文件的内容解压后如下</p><p><img src="/images/postimgs/%E5%A6%82%E4%BD%95%E5%9C%A8lottie-web-%E5%8A%A0%E8%BD%BDzip%E6%96%87%E4%BB%B6__2023-08-20-21-16-36.png" alt="如何在lottie-web-加载zip文件" /></p><p>搜索了一下发现网上没有加载的方案就研究了一下，这里记录一下</p><h2 id="方案"><a class="markdownIt-Anchor" href="#方案"></a> 方案</h2><p>老哥们都很忙直接上方案 DEMO</p><p class="codepen" data-height="450" data-default-tab="js,result" data-slug-hash="XWoJJde" data-user="aizigao" style="height: 450px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">  <span>See the Pen <a href="https://codepen.io/aizigao/pen/XWoJJde">  Untitled</a> by aizigao (<a href="https://codepen.io/aizigao">@aizigao</a>)  on <a href="https://codepen.io">CodePen</a>.</span></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><p>代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 核心代码看这里</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> zipSrc 远端的链接</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">unZipLottieFile</span> = <span class="keyword">async</span> (<span class="params">zipSrc</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 加载zip文件 并用 arrayBuffer 读取，arraybuffer 即不带view的 二进制数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">const</span> zipBuffer = <span class="keyword">await</span> <span class="title function_">fetch</span>(zipSrc).<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span></span><br><span class="line">    response.<span class="title function_">arrayBuffer</span>()</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 使用 jsZip 读取文件</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">const</span> zip = <span class="keyword">await</span> <span class="title class_">JSZip</span>.<span class="title function_">loadAsync</span>(zipBuffer);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 打印一下给大家看下这个里的结构</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;[zip]&quot;</span>, zip);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> imageUrlsMap = &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> oriJson = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> zipEntry <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">values</span>(zip.<span class="property">files</span>)) &#123;</span><br><span class="line">    <span class="comment">// 跳过文件夹 和 隐藏文件</span></span><br><span class="line">    <span class="keyword">if</span> (zipEntry.<span class="property">dir</span> || <span class="regexp">/\/\./</span>.<span class="title function_">test</span>(zipEntry.<span class="property">name</span>)) &#123;</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> isJSON = <span class="regexp">/\.json/i</span>.<span class="title function_">test</span>(zipEntry.<span class="property">name</span>);</span><br><span class="line">    <span class="keyword">const</span> isImg = <span class="regexp">/\.(jpg|jpeg|png|gif)$/i</span>.<span class="title function_">test</span>(zipEntry.<span class="property">name</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isJSON) &#123;</span><br><span class="line">      <span class="comment">// 获取 核心的 JSON 配置文件</span></span><br><span class="line">      <span class="keyword">const</span> oriJsonText = <span class="keyword">await</span> zipEntry.<span class="title function_">async</span>(<span class="string">&quot;text&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span> (oriJsonText) &#123;</span><br><span class="line">        oriJson = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(oriJsonText);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isImg) &#123;</span><br><span class="line">      <span class="comment">// 图片以 blob方式读取</span></span><br><span class="line">      <span class="keyword">const</span> imgBlob = <span class="keyword">await</span> zipEntry.<span class="title function_">async</span>(<span class="string">&quot;blob&quot;</span>);</span><br><span class="line">      <span class="keyword">const</span> fileName = zipEntry.<span class="property">name</span>.<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>).<span class="title function_">pop</span>();</span><br><span class="line">      <span class="comment">// 转成 临时的 URL</span></span><br><span class="line">      imageUrlsMap[fileName] = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(<span class="keyword">new</span> <span class="title class_">Blob</span>([imgBlob]));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 定义一个辅助方法替换图片路径</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> <span class="variable">obj</span></span></span><br><span class="line"><span class="comment">   * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">deepUpdateImgPath</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> obj !== <span class="string">&quot;object&quot;</span> || obj === <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">      <span class="keyword">if</span> (obj.<span class="title function_">hasOwnProperty</span>(key)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key === <span class="string">&quot;p&quot;</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (imageUrlsMap[obj[key]]) &#123;</span><br><span class="line">            <span class="keyword">const</span> filePath = imageUrlsMap[obj[key]];</span><br><span class="line">            obj[key] = filePath.<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>).<span class="title function_">pop</span>();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          obj[key] = <span class="title function_">deepUpdateImgPath</span>(obj[key]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 替换JSON 内的 assets 内的 p 属性为 临时路径</span></span><br><span class="line">  <span class="keyword">const</span> targetJSON = <span class="title function_">deepUpdateImgPath</span>(oriJson);</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">json</span>: targetJSON,</span><br><span class="line">    imageUrlsMap</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">loadZipAnimation</span> = <span class="keyword">async</span> (<span class="params">src</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; json &#125; = <span class="keyword">await</span> <span class="title function_">unZipLottieFile</span>(src);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(json);</span><br><span class="line">  lottie.<span class="title function_">loadAnimation</span>(&#123;</span><br><span class="line">    <span class="attr">container</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;anim&quot;</span>),</span><br><span class="line">    <span class="attr">renderer</span>: <span class="string">&quot;svg&quot;</span>,</span><br><span class="line">    <span class="attr">loop</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">autoplay</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 这里要修改为这个</span></span><br><span class="line">    <span class="attr">assetsPath</span>: <span class="string">`blob:<span class="subst">$&#123;location.origin&#125;</span>/`</span>,</span><br><span class="line">    <span class="attr">animationData</span>: json</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> remoteZipFile = <span class="string">&quot;https://aizigao.xyz/files/lottie-test.zip&quot;</span>;</span><br><span class="line"><span class="title function_">loadZipAnimation</span>(remoteZipFile);</span><br></pre></td></tr></table></figure><h2 id="过程与解析"><a class="markdownIt-Anchor" href="#过程与解析"></a> 过程与解析</h2><ol><li>首先我搜索了下 android 端的加载方案是先下载到本地，然后本地解压在加载</li></ol><blockquote><p>掘金 id 慢笑 的博文<br />参考这里 <a href="https://juejin.cn/post/6844904116309721095#heading-5">https://juejin.cn/post/6844904116309721095#heading-5</a></p></blockquote><ol start="2"><li><p>web 解压可以用 jsZip 处理，但解压后没法直接引用本地文件，解压也需要用户确认后下载到本地，本想放弃，但突然想到应该用 <code>blob://</code> 的临时 URL 路径应该就可以处理了</p></li><li><p>使用 jsZip 解压后, 可以看到 jsZip 解压后的内容</p></li></ol><p><img src="/images/postimgs/%E5%A6%82%E4%BD%95%E5%9C%A8lottie-web-%E5%8A%A0%E8%BD%BDzip%E6%96%87%E4%BB%B6__2023-08-20-21-47-35.png" alt="如何在lottie-web-加载zip文件" /></p><p>用 <code>.</code> 开头的隐藏文件和文件架是不用处理, 关键的是 json 文件, 可以看到的是 <code>u</code> 是文件目录, <code>p</code> 是文件名</p><p>![如何在lottie-web-加载zip文件](/images/postimgs/如何在lottie-web-加载zip文件__2023-08-20-22-08-46.png =200x200)</p><ol start="4"><li>现在的目标就是替换 p 的内容为 线上的地址，然后加载 json 就可以了</li><li>线上的地址可以直接用 <code>URL.createObjectURL</code> 生产一个临时的，可以生产一个临时的 <code>blob:&lt;location&gt;/&lt;uuid&gt;</code> 的地址，页面关闭后会立即销毁</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 图片以 blob方式读取</span></span><br><span class="line"><span class="keyword">const</span> imgBlob = <span class="keyword">await</span> zipEntry.<span class="title function_">async</span>(<span class="string">&quot;blob&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fileName = zipEntry.<span class="property">name</span>.<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>).<span class="title function_">pop</span>();</span><br><span class="line"><span class="comment">// 转成 临时的 URL</span></span><br><span class="line">imageUrlsMap[fileName] = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(<span class="keyword">new</span> <span class="title class_">Blob</span>([imgBlob]));</span><br></pre></td></tr></table></figure><ol start="6"><li>已递归的方式替换 JSON 内 <code>p</code> 属性即可, 这里需要注意的是 使用 <code>lottie.loadAnimation</code> 使用了 <code>assetsPath</code>， 所以 JSON 对象的的数据内 <code>p</code> 值仅取生产临时链接的 uuid 值即可</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">lottie.<span class="title function_">loadAnimation</span>(&#123;</span><br><span class="line">   <span class="attr">container</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;anim&quot;</span>),</span><br><span class="line">   <span class="attr">renderer</span>: <span class="string">&quot;svg&quot;</span>,</span><br><span class="line">   <span class="attr">loop</span>: <span class="literal">true</span>,</span><br><span class="line">   <span class="attr">autoplay</span>: <span class="literal">true</span>,</span><br><span class="line">   <span class="comment">// 这里要修改为这个</span></span><br><span class="line">   <span class="attr">assetsPath</span>: <span class="string">`blob:<span class="subst">$&#123;location.origin&#125;</span>/`</span>,</span><br><span class="line">   <span class="attr">animationData</span>: json</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;ul class=&quot;markdownIt-TOC&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%89%8D%E8%A8%80&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%96%B9%E6%A1%88&quot;&gt;方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E8</summary>
      
    
    
    
    
    <category term="个人笔记" scheme="http://aizigao.xyz/tags/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    <category term="web 前端" scheme="http://aizigao.xyz/tags/web-%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>xmind-viewer 代码学习笔记</title>
    <link href="http://aizigao.xyz/2021/11/04/xmind-viewer-%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://aizigao.xyz/2021/11/04/xmind-viewer-%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-11-04T14:18:13.000Z</published>
    <updated>2023-08-21T14:43:40.575Z</updated>
    
    <content type="html"><![CDATA[<p><ul class="markdownIt-TOC"><li><a href="#%E6%98%AF%E4%BB%80%E4%B9%88">是什么</a></li><li><a href="#%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%8B">运行一下</a></li><li><a href="#%E5%8A%9F%E8%83%BD%E5%88%86%E6%9E%90">功能分析</a></li><li><a href="#todo">TODO</a></li><li><a href="#%E6%9D%82%E7%82%B9">杂点</a></li><li><a href="#svg-group-%E5%88%86%E6%9E%90">svg group 分析</a></li><li><a href="#%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0">源码学习</a><ul><li><a href="#%E4%BB%A3%E7%A0%81%E7%9B%AE%E5%BD%95">代码目录</a></li><li><a href="#%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96">文件读取</a></li><li><a href="#%E6%B8%B2%E6%9F%93-v">渲染 v</a></li></ul></li></ul></p><p>TODO: 待整理</p><p><strong>usage</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">JSZip</span> <span class="keyword">from</span> <span class="string">&quot;jszip&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; loadFromXMind, <span class="title class_">SnowbrushRenderer</span> &#125; <span class="keyword">from</span> <span class="string">&quot;xmind-viewer&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">JSZip</span>().<span class="title function_">loadAsync</span>(zipFile).<span class="title function_">then</span>(<span class="function">(<span class="params">zip</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">loadFromXMind</span>(zip)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="title class_">SnowbrushRenderer</span>(data.<span class="property">sheets</span>);</span><br><span class="line">      <span class="keyword">return</span> renderer.<span class="title function_">render</span>(&#123; <span class="attr">sheetIndex</span>: <span class="number">0</span> &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">svg</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// document.body.appendChild(svg)</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>tree</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── common</span><br><span class="line">├── model</span><br><span class="line">├── structure</span><br><span class="line">├── utils</span><br><span class="line">├── view</span><br><span class="line">├── viewController</span><br><span class="line">├── index.ts</span><br><span class="line">├── snowbrushRenderer.ts</span><br><span class="line">└── xmindLoader.ts</span><br></pre></td></tr></table></figure><p>类</p><p><strong>SnowbrushRenderer</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">@startuml</span><br><span class="line">interface RenderOptions&#123;</span><br><span class="line">sheetIndex: number</span><br><span class="line">&#125;</span><br><span class="line">&#x27; skinparam handwritten true</span><br><span class="line">class SnowbrushRenderer&#123; - \_data:SheetData[] // 数据 - \_sheetViewController: SheetViewController</span><br><span class="line">constructor(data:SheetData):void</span><br><span class="line">&#x27; ---------- + render(options: RenderOptions): Canvas + get svg():Svg + get bounds():void + transform(x:number,y:number):&#123;x:number,y:number&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x27; note right of SnowbrushRenderer</span><br><span class="line">&#x27; xxxx</span><br><span class="line">&#x27; end note</span><br><span class="line"></span><br><span class="line">    RenderOptions &lt;|.. SnowbrushRenderer</span><br><span class="line"></span><br><span class="line">    SnowbrushRenderer -&gt; Workbook</span><br><span class="line">    SnowbrushRenderer -&gt; SheetViewController</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    abstract class ViewController &#123;</span><br><span class="line"></span><br><span class="line">        - readonly _parent: ViewController</span><br><span class="line"></span><br><span class="line">        constructor(parent: ViewController)</span><br><span class="line"></span><br><span class="line">        abstract get type(): ViewControllerType</span><br><span class="line">        abstract get view(): View</span><br><span class="line">        abstract get model(): Model</span><br><span class="line">        get parent(): ViewController</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class SheetViewController extends ViewController&#123;</span><br><span class="line">        - readonly _sheet: Sheet</span><br><span class="line">        - readonly _view: SheetView</span><br><span class="line"></span><br><span class="line">        - _centralBranchViewController: BranchViewController</span><br><span class="line">        - _multiLineColors: string</span><br><span class="line">        - _bgColor: string</span><br><span class="line"></span><br><span class="line">        + init()</span><br><span class="line">        - _initStyle()</span><br><span class="line">        get type()</span><br><span class="line">        get view():SheetView</span><br><span class="line">        get model(): Sheet</span><br><span class="line">        get multiLineColors()</span><br><span class="line">        hasMultiLineColors()</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    SheetView &lt;- SheetViewController</span><br><span class="line">    BranchViewController &lt;- SheetViewController</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    abstract class View &#123;</span><br><span class="line">        abstract readonly type: ViewType</span><br><span class="line"></span><br><span class="line">        - _size: Size</span><br><span class="line">        sizeDirty: boolean</span><br><span class="line">        - _prefSize: Size</span><br><span class="line"></span><br><span class="line">        abstract get content(): Element</span><br><span class="line">        set size(size: Size)</span><br><span class="line">        get size()</span><br><span class="line">        set preferredSize(preferredSize: Size)</span><br><span class="line">        get preferredSize(): Size</span><br><span class="line">        appendChild(view: View)</span><br><span class="line">    &#125;</span><br><span class="line">    class SheetView extends View&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">@enduml</span><br></pre></td></tr></table></figure><p><strong>model</strong>关系</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">@startuml</span><br><span class="line">interface ModelData&#123;</span><br><span class="line">    id: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">abstract Model&#123;</span><br><span class="line">    ownerSheet: Sheet</span><br><span class="line">    parent: Model</span><br><span class="line">    getStyleValue(key: StyleKey):string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Model &lt;- Model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ModelData &lt;|-- SheetData</span><br><span class="line">interface SheetData &#123;</span><br><span class="line">  title: string</span><br><span class="line">  rootTopic: TopicData</span><br><span class="line">  style?: StyleData</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TopicData &lt;-- SheetData</span><br><span class="line">StyleData &lt;-- SheetData</span><br><span class="line"></span><br><span class="line">class Sheet &#123;</span><br><span class="line">  - _rootTopic: Topic</span><br><span class="line">  - _theme: Theme</span><br><span class="line">  - readonly _data: SheetData</span><br><span class="line">  init()</span><br><span class="line">  get rootTopic(): Topic</span><br><span class="line">  get theme(): theme</span><br><span class="line">  getStyelValue(key: StyleKey): string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Model &lt;-- Sheet</span><br><span class="line">Topic &lt;-- Sheet</span><br><span class="line">SheetData &lt;-- Sheet</span><br><span class="line">Theme &lt;-- Sheet</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface StyleData extends ModelData &#123;</span><br><span class="line">  properties: any</span><br><span class="line">  styleId: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Style extends Model&#123;</span><br><span class="line">    - readonly _data: StyleData</span><br><span class="line">    getStyleValue(key: StyleKey): string</span><br><span class="line">&#125;</span><br><span class="line">StyleData &lt;-- Style</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface ThemeData extends ModelData &#123;</span><br><span class="line">  map?: StyleData,</span><br><span class="line">  centralTopic?: StyleData,</span><br><span class="line">  mainTopic?: StyleData,</span><br><span class="line">  subTopic?: StyleData,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Theme extends Model&#123;</span><br><span class="line">  - readonly _data: ThemeData</span><br><span class="line">  - _props: Map&lt;string, Style&gt;</span><br><span class="line">  constructor(data: ThemeData)</span><br><span class="line">  - _init()</span><br><span class="line">  getStyle(className: string)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">ThemeData &lt;-- Theme</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface TopicData extends ModelData &#123;</span><br><span class="line">  title: string,</span><br><span class="line">  structureClass?: string,</span><br><span class="line">  children?: &#123;</span><br><span class="line">    [type: string]: Array&lt;TopicData&gt;</span><br><span class="line">  &#125;,</span><br><span class="line">  customWidth?: string,</span><br><span class="line">  style?: StyleData,</span><br><span class="line">  extensions?: Array&lt;ExtensionData&gt;,</span><br><span class="line">&#125;</span><br><span class="line">ExtensionData &lt;-- TopicData</span><br><span class="line">TopicData &lt;- TopicData</span><br><span class="line">StyleData &lt;- TopicData</span><br><span class="line"></span><br><span class="line">interface ExtensionData &#123;</span><br><span class="line">  provider: string,</span><br><span class="line">  content: string | [object],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Topic extends Model &#123;</span><br><span class="line"></span><br><span class="line">  type: TopicType</span><br><span class="line"></span><br><span class="line">  - readonly _data: TopicData</span><br><span class="line"></span><br><span class="line">  - _children: &#123; [type: string]: Array&lt;Topic&gt; &#125;</span><br><span class="line"></span><br><span class="line">  - _extensionMap: &#123; [provider: string]: ExtensionData &#125;</span><br><span class="line"></span><br><span class="line">  constructor(data: TopicData)</span><br><span class="line">  get title(): string</span><br><span class="line">  get customWidth(): number</span><br><span class="line">  get structureClass(): string</span><br><span class="line">  addSubtopic(subtopic: Topic, options: &#123; type?: TopicType &#125; = &#123;&#125;)</span><br><span class="line">  -_addSubtopic(subtopic: Topic, options: &#123; type: TopicType &#125;)</span><br><span class="line">  getChildrenByType(type: TopicType): Array&lt;Topic&gt;</span><br><span class="line">  getStyleValue(key: StyleKey)</span><br><span class="line">  getUnbalancedInfo(): &#123; rightSideCount: number &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">ExtensionData &lt;-- Topic</span><br><span class="line">TopicData &lt;-- Topic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Workbook &#123;</span><br><span class="line">  private readonly _dataArr: SheetData[]</span><br><span class="line">  private _sheets: Array&lt;Sheet&gt; = []</span><br><span class="line">  constructor(dataArr: SheetData[])</span><br><span class="line">  getSheetByIndex(index: number)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SheetData &lt;- Workbook</span><br><span class="line"></span><br><span class="line">@enduml</span><br></pre></td></tr></table></figure><h2 id="是什么"><a class="markdownIt-Anchor" href="#是什么"></a> 是什么</h2><p>xmind-viewer 是一个废弃的库, 用与查看 xmind 的文件，但是内部的代码很有学习的价值</p><h2 id="运行一下"><a class="markdownIt-Anchor" href="#运行一下"></a> 运行一下</h2><p>这个项目目前是运行不了的，需要魔改一下, 直接我直接用 umi 保裹了一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/aizigao/xmind-viewer</span><br><span class="line">cd xmind-viewer &amp;&amp; npm i</span><br><span class="line">npm start</span><br></pre></td></tr></table></figure><h2 id="功能分析"><a class="markdownIt-Anchor" href="#功能分析"></a> 功能分析</h2><ul><li>读取 xmind 文件 jszip 处理</li><li>了解 xmind 文件结构</li><li>渲染 xmind</li><li>渲染用 svg svg.js</li><li>这个项目只有查看功能没有编辑功能</li></ul><h2 id="todo"><a class="markdownIt-Anchor" href="#todo"></a> TODO</h2><ul><li>[x] svg.js 文档走一遍</li><li>[ ] 当前的渲染结构的 svg 分组结构分析一番</li></ul><h2 id="杂点"><a class="markdownIt-Anchor" href="#杂点"></a> 杂点</h2><ul><li><p>文本节点现在也是用 svg 渲染的(这个应该是不利于扩展)<br /><img src="/images/postimgs/xmindview%E5%88%86%E6%9E%90__2023-08-02-15-38-01.png" alt="xmindview分析__2023-08-02-15-38-01" /></p></li><li><p>clipPath 一般是蒙层，路径尝试用 illustrator 复制读取</p></li></ul><p><img src="/images/postimgs/xmindview%E5%88%86%E6%9E%90__2023-08-02-15-41-13.png" alt="xmindview分析__2023-08-02-15-41-13" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">path</span></span></span><br><span class="line"><span class="tag">    <span class="attr">d</span>=<span class="string">&quot;M -139.353515625 -39L 139.353515625 -39Q 147.353515625 -39  147.353515625 -31L 147.353515625 31Q 147.353515625 39  139.353515625 39L -139.353515625 39Q -147.353515625 39  -147.353515625 31L -147.353515625 -31Q -147.353515625 -39  -139.353515625 -39 </span></span></span><br><span class="line"><span class="string"><span class="tag">  M -10000 -10000</span></span></span><br><span class="line"><span class="string"><span class="tag">  L 10000 -10000</span></span></span><br><span class="line"><span class="string"><span class="tag">  L 10000 10000</span></span></span><br><span class="line"><span class="string"><span class="tag">  L -10000 10000</span></span></span><br><span class="line"><span class="string"><span class="tag">&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">fill</span>=<span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">transform</span>=<span class="string">&quot;translate(0 0)&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">clip-rule</span>=<span class="string">&quot;evenodd&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>复制生成 test.svg, illustrator 打开</p><p><img src="/images/postimgs/xmindview%E5%88%86%E6%9E%90__2023-08-02-15-43-04.png" alt="xmindview分析__2023-08-02-15-43-04" /></p><p>test2.svg</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">path</span></span></span><br><span class="line"><span class="tag">    <span class="attr">d</span>=<span class="string">&quot;M -139.353515625 -39L 139.353515625 -39Q 147.353515625 -39  147.353515625 -31L 147.353515625 31Q 147.353515625 39  139.353515625 39L -139.353515625 39Q -147.353515625 39  -147.353515625 31L -147.353515625 -31Q -147.353515625 -39  -139.353515625 -39 </span></span></span><br><span class="line"><span class="string"><span class="tag">  M -10000 -10000</span></span></span><br><span class="line"><span class="string"><span class="tag">  L 10000 -10000</span></span></span><br><span class="line"><span class="string"><span class="tag">  L 10000 10000</span></span></span><br><span class="line"><span class="string"><span class="tag">  L -10000 10000</span></span></span><br><span class="line"><span class="string"><span class="tag">&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">fill</span>=<span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">transform</span>=<span class="string">&quot;translate(0 0)&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">clip-rule</span>=<span class="string">&quot;evenodd&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="svg-group-分析"><a class="markdownIt-Anchor" href="#svg-group-分析"></a> svg group 分析</h2><ul><li>[sheet] 最外层 外面有个 transform<ul><li>[connection-container] -&gt; [connection] 存放链接线 <img src="/images/postimgs/xmindview%E5%88%86%E6%9E%90__2023-08-02-15-48-40.png" alt="xmindview分析__2023-08-02-15-48-40" /></li><li>[branch-container] -&gt; [branch] 分支<br /><img src="/images/postimgs/xmindview%E5%88%86%E6%9E%90__2023-08-02-15-52-06.png" alt="xmindview分析__2023-08-02-15-52-06" /></li></ul></li></ul><p><strong>connection</strong></p><ul><li>都是一个 path clip-path 现在看仅是一个框</li></ul><p><strong>branch</strong></p><p>结构<br /><img src="/images/postimgs/xmindview%E5%88%86%E6%9E%90__2023-08-02-15-55-06.png" alt="xmindview分析__2023-08-02-15-55-06" /></p><p>再子一级也是打平的<br /><img src="/images/postimgs/xmindview%E5%88%86%E6%9E%90__2023-08-02-15-57-42.png" alt="xmindview分析__2023-08-02-15-57-42" /></p><h2 id="源码学习"><a class="markdownIt-Anchor" href="#源码学习"></a> 源码学习</h2><p>原来的代码都在我的仓库的 src/core 内</p><h3 id="代码目录"><a class="markdownIt-Anchor" href="#代码目录"></a> 代码目录</h3><p>看文件文件的结构可以看到是一个很标准的 mvc 结构，个人技术栈历史是 简单 jquery -&gt; angular1 -&gt; react | vue, 没有相关的经验</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── common</span><br><span class="line">│   └── constants</span><br><span class="line">│       ├── extensions.ts</span><br><span class="line">│       ├── layoutSettings.ts</span><br><span class="line">│       ├── models.ts</span><br><span class="line">│       ├── structures.ts</span><br><span class="line">│       ├── styles.ts</span><br><span class="line">│       ├── viewControllers.ts</span><br><span class="line">│       └── views.ts</span><br><span class="line">├── index.ts</span><br><span class="line">├── model</span><br><span class="line">│   ├── model.ts</span><br><span class="line">│   ├── sheet.ts</span><br><span class="line">│   ├── style.ts</span><br><span class="line">│   ├── theme.ts</span><br><span class="line">│   ├── topic.ts</span><br><span class="line">│   └── workbook.ts</span><br><span class="line">├── snowbrushRenderer.ts</span><br><span class="line">├── structure</span><br><span class="line">│   ├── abstractStructure.ts</span><br><span class="line">│   ├── baseMap.ts</span><br><span class="line">│   ├── fishboneLeftHeaded.ts</span><br><span class="line">│   ├── fishboneNENormal.ts</span><br><span class="line">│   ├── fishboneNWNormal.ts</span><br><span class="line">│   ├── fishboneRightHeaded.ts</span><br><span class="line">│   ├── fishboneSENormal.ts</span><br><span class="line">│   ├── fishboneSWNormal.ts</span><br><span class="line">│   ├── helper</span><br><span class="line">│   │   ├── allStructures.ts</span><br><span class="line">│   │   └── structureUtils.ts</span><br><span class="line">│   ├── leftAndRight.ts</span><br><span class="line">│   ├── logicLeft.ts</span><br><span class="line">│   ├── logicRight.ts</span><br><span class="line">│   ├── mapClockWise.ts</span><br><span class="line">│   ├── mapUnbalanced.ts</span><br><span class="line">│   ├── orgChart.ts</span><br><span class="line">│   ├── orgChartDown.ts</span><br><span class="line">│   ├── orgChartUp.ts</span><br><span class="line">│   ├── timelineHorizontal.ts</span><br><span class="line">│   ├── timelineHorizontalDown.ts</span><br><span class="line">│   ├── timelineHorizontalUp.ts</span><br><span class="line">│   ├── timelineVertical.ts</span><br><span class="line">│   ├── treeLeft.ts</span><br><span class="line">│   ├── treeLeftAndRight.ts</span><br><span class="line">│   └── treeRight.ts</span><br><span class="line">├── utils</span><br><span class="line">│   ├── area.ts</span><br><span class="line">│   ├── bounds.ts</span><br><span class="line">│   ├── branchUtils.ts</span><br><span class="line">│   ├── fontInfo.ts</span><br><span class="line">│   ├── layoutUtil.ts</span><br><span class="line">│   ├── position.ts</span><br><span class="line">│   ├── size.ts</span><br><span class="line">│   ├── stringNodes.ts</span><br><span class="line">│   └── styleManager</span><br><span class="line">│       ├── defaultStyles.ts</span><br><span class="line">│       ├── index.ts</span><br><span class="line">│       ├── layeredStyleManager</span><br><span class="line">│       │   ├── layeredStyleManager.ts</span><br><span class="line">│       │   └── styleDescriptor.ts</span><br><span class="line">│       ├── selector</span><br><span class="line">│       │   ├── mindMapStyleSelector.ts</span><br><span class="line">│       │   ├── sheetStyleSelector.ts</span><br><span class="line">│       │   └── topicStyleSelector.ts</span><br><span class="line">│       └── styleSelectorFactory.ts</span><br><span class="line">├── view</span><br><span class="line">│   ├── branchView.ts</span><br><span class="line">│   ├── connectionView.ts</span><br><span class="line">│   ├── layoutEngine</span><br><span class="line">│   │   ├── layouts</span><br><span class="line">│   │   │   ├── cell.ts</span><br><span class="line">│   │   │   ├── gridData.ts</span><br><span class="line">│   │   │   ├── gridLayout.ts</span><br><span class="line">│   │   │   ├── layout.ts</span><br><span class="line">│   │   │   └── layoutData.ts</span><br><span class="line">│   │   ├── titleLayoutWorker.ts</span><br><span class="line">│   │   └── topicLayoutWorker.ts</span><br><span class="line">│   ├── lineRender</span><br><span class="line">│   │   └── topicLineStyle.ts</span><br><span class="line">│   ├── renderEngine</span><br><span class="line">│   │   └── topicShape</span><br><span class="line">│   │       ├── brushes.ts</span><br><span class="line">│   │       ├── brushesHelper.ts</span><br><span class="line">│   │       ├── circleTopicShape.ts</span><br><span class="line">│   │       ├── diamondTopicShape.ts</span><br><span class="line">│   │       ├── doubleUnderlineTopicShape.ts</span><br><span class="line">│   │       ├── ellipseRectTopicShape.ts</span><br><span class="line">│   │       ├── ellipseTopicShape.ts</span><br><span class="line">│   │       ├── ellipticRectangleTopicShape.ts</span><br><span class="line">│   │       ├── fishHeadToLeftTopicShape.ts</span><br><span class="line">│   │       ├── fishHeadToRightTopicShape.ts</span><br><span class="line">│   │       ├── fishboneUnderlineTopicShape.ts</span><br><span class="line">│   │       ├── hexagonTopicShape.ts</span><br><span class="line">│   │       ├── index.ts</span><br><span class="line">│   │       ├── parallelogramTopicShape.ts</span><br><span class="line">│   │       ├── rectTopicShape.ts</span><br><span class="line">│   │       ├── roundedHexagonTopicShape.ts</span><br><span class="line">│   │       ├── roundedRectTopicShape.ts</span><br><span class="line">│   │       ├── singleBreakAngleTopicShape.ts</span><br><span class="line">│   │       ├── stackTopicShape.ts</span><br><span class="line">│   │       ├── topicShape.ts</span><br><span class="line">│   │       ├── topicShapeUtils.ts</span><br><span class="line">│   │       └── underlineTopicShape.ts</span><br><span class="line">│   ├── sheetView.ts</span><br><span class="line">│   ├── textView.ts</span><br><span class="line">│   ├── topicTitleView.ts</span><br><span class="line">│   ├── topicView.ts</span><br><span class="line">│   └── view.ts</span><br><span class="line">├── viewController</span><br><span class="line">│   ├── branchViewController.ts</span><br><span class="line">│   ├── connectionViewController.ts</span><br><span class="line">│   ├── sheetViewController.ts</span><br><span class="line">│   ├── textViewController.ts</span><br><span class="line">│   ├── topicTitleViewController.ts</span><br><span class="line">│   ├── topicViewController.ts</span><br><span class="line">│   └── viewController.ts</span><br><span class="line">└── xmindLoader.ts</span><br><span class="line"></span><br><span class="line">16 directories, 101 files</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>model 定义</strong></p><h3 id="文件读取"><a class="markdownIt-Anchor" href="#文件读取"></a> 文件读取</h3><ul><li>xmind 文件结构 TODO:</li><li>读取代码</li></ul><h3 id="渲染-v"><a class="markdownIt-Anchor" href="#渲染-v"></a> 渲染 v</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;ul class=&quot;markdownIt-TOC&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%98%AF%E4%BB%80%E4%B9%88&quot;&gt;是什么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%8B&quot;&gt;运</summary>
      
    
    
    
    
    <category term="个人笔记" scheme="http://aizigao.xyz/tags/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>移动端调试工具个人小结</title>
    <link href="http://aizigao.xyz/2021/04/08/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E4%B8%AA%E4%BA%BA%E5%B0%8F%E7%BB%93/"/>
    <id>http://aizigao.xyz/2021/04/08/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E4%B8%AA%E4%BA%BA%E5%B0%8F%E7%BB%93/</id>
    <published>2021-04-08T13:25:05.000Z</published>
    <updated>2023-08-20T14:33:51.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>在 PC 上我们调试的话用 chrome 自带的 <code>devtool</code> 就可以，在移动端的方案就不是很好搞了，所以在这里记录一下。</p><h2 id="1-添加-console-控制台输出"><a class="markdownIt-Anchor" href="#1-添加-console-控制台输出"></a> 1. 添加 console 控制台输出</h2><p>在移动web中，添加控制台输出的话，主要有两个工具 <a href="https://github.com/Tencent/vConsole">vConsole</a> 和 <a href="https://github.com/liriliri/eruda">eruda</a></p><p><img src="https://github.com/Tencent/vConsole/raw/dev/example/snapshot/panel_log.jpg" alt="vConsole" /><br /><img src="https://github.com/liriliri/eruda/raw/master/doc/screenshot.jpg" alt="eruda" /></p><blockquote><p>我个人更喜欢eruda，工具更全一些</p></blockquote><p><strong>vConsole基本使用</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vconsole/dist/vconsole.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> vConsole = <span class="keyword">new</span> <span class="title class_">VConsole</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>eruda基本使用</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/eruda/eruda.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>eruda.init();<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>eruda 在 iOS 的 UIWebView 内击点会不流畅，主要用是 <code>shadowdom</code> 的原因, 可以按以下方案引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> load = <span class="keyword">function</span> (<span class="params">src, cb</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> scriptEle = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">  scriptEle.<span class="title function_">setAttribute</span>(<span class="string">&quot;src&quot;</span>, src);</span><br><span class="line">  scriptEle.<span class="title function_">addEventListener</span>(<span class="string">&quot;load&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">cb</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">  cb != <span class="literal">null</span> &amp;&amp; scriptEle.<span class="title function_">addEventListener</span>(<span class="string">&quot;error&quot;</span>, cb);</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(scriptEle);</span><br><span class="line">  <span class="keyword">return</span> scriptEle;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> loadEruda = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> loaded = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">var</span> isSafari =</span><br><span class="line">    (navigator.<span class="property">vendor</span> &amp;&amp;</span><br><span class="line">      navigator.<span class="property">vendor</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;Apple&quot;</span>) &gt; -<span class="number">1</span> &amp;&amp;</span><br><span class="line">      navigator.<span class="property">userAgent</span> &amp;&amp;</span><br><span class="line">      !navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="string">&quot;CriOS&quot;</span>)) ||</span><br><span class="line">    <span class="regexp">/^((?!chrome|android).)*safari/i</span>.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>);</span><br><span class="line">  <span class="keyword">var</span> isUiWebView =</span><br><span class="line">    isSafari &amp;&amp; !(<span class="variable language_">window</span>.<span class="property">webkit</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">webkit</span>.<span class="property">messageHandlers</span>);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">load</span>(<span class="string">&quot;https://cdn.jsdelivr.net/npm/eruda@2.3.3/eruda.min.js&quot;</span>, <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isUiWebView) &#123;</span><br><span class="line">      <span class="keyword">var</span> el = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(el);</span><br><span class="line">      eruda.<span class="title function_">init</span>(&#123;</span><br><span class="line">        <span class="attr">container</span>: el,</span><br><span class="line">        <span class="attr">useShadowDom</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      eruda.<span class="title function_">init</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="2-代理到本地-远程调试"><a class="markdownIt-Anchor" href="#2-代理到本地-远程调试"></a> 2. 代理到本地, 远程调试</h2><p>之前的开发项目时，大家一定都有用过 <code>charles</code> 或者 <code>finder</code> 抓过包的经验，在这几年新推出的如 <code>spy-debugger</code> 和 <code>whistle</code> 现在整合了抓包功能的同时也有代理的能力, <code>charles</code> 和 <code>nginx</code> 也可以代理，就是配置起来麻烦, 日常开发中我已经很少用了。线上出现问题后可以代理到本地调试无疑是最快的方式。</p><h3 id="http-代理"><a class="markdownIt-Anchor" href="#http-代理"></a> HTTP 代理</h3><p>HTTP 代理大家应该都有用过 <code>charles</code> 的 <code>proxy</code> 功能，但是我现在用的更多是 <a href="https://wproxy.org/whistle/">whistle</a>, 它提供功能很多，我下面都以</p><h3 id="不走-http-代理"><a class="markdownIt-Anchor" href="#不走-http-代理"></a> 不走 HTTP 代理</h3><p>上述的 <code>charles</code>, <code>finder</code>, <code>whistle</code> 等都是走的 HTTP 代理方式，在一些 APP 中，为了安全起见是不会生效的, 如支付宝，银联APP，各大银行 APP 等。</p><h2 id="3-其它抓包工具"><a class="markdownIt-Anchor" href="#3-其它抓包工具"></a> 3. 其它抓包工具</h2><ul><li></li></ul><h2 id="4-云真机调试平台"><a class="markdownIt-Anchor" href="#4-云真机调试平台"></a> 4. 云真机调试平台</h2><h2 id="代理类方式"><a class="markdownIt-Anchor" href="#代理类方式"></a> 代理类方式</h2><ul><li>[ ] charles</li><li>[ ] spy-debugger</li><li>[ ] whistle</li></ul><h2 id="真机"><a class="markdownIt-Anchor" href="#真机"></a> 真机</h2><ul><li>[ ] debug 线上 – 清理缓存 x5 <a href="http://debugx5.qq.com">debugx5.qq.com</a></li><li>[ ] irma 磨刀石</li><li>[ ] react-native-debugger</li><li>[ ] 代理与mock数据</li><li>[ ] android 下 root 后安装面具，改host, 安装系统证书</li><li>[ ] 改不了hosts, 如ios, 本地起dns服务器 走起dns改路由表</li><li>[ ] genymotion – google-store/x86/transform/代理/adb/hosts</li><li>[ ] TBS Studio <a href="http://res.imtt.qq.com/tbs_inspect/x5-debug.html">X5 Blink 内核判断</a> | ios | android</li><li>[ ] 微信校验是会暂存的</li></ul><h2 id="其它"><a class="markdownIt-Anchor" href="#其它"></a> 其它</h2><ul><li>[ ] chrome-dev-tools</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;在 PC 上我们调试的话用 chrome 自带的 &lt;code&gt;devtool&lt;/code&gt; 就可以，在移动端的方案就不是很好搞了，所以在这里记录</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>个人面试用的思维导图备份</title>
    <link href="http://aizigao.xyz/2020/12/25/%E4%B8%AA%E4%BA%BA%E9%9D%A2%E8%AF%95%E7%94%A8%E7%9A%84%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E5%A4%87%E4%BB%BD/"/>
    <id>http://aizigao.xyz/2020/12/25/%E4%B8%AA%E4%BA%BA%E9%9D%A2%E8%AF%95%E7%94%A8%E7%9A%84%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E5%A4%87%E4%BB%BD/</id>
    <published>2020-12-25T14:48:15.000Z</published>
    <updated>2023-08-20T14:33:14.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2><p>面试用的思维导图，总结一些知识点, 由百度脑图制做,　太大了，右键新页面打开吧</p><h2 id="http-缓存"><a class="markdownIt-Anchor" href="#http-缓存"></a> http-缓存</h2><p><img src="https://i.loli.net/2021/02/25/YqHmgp7UMPajiZz.png" alt="http-缓存.png" /></p><h2 id="设计模式"><a class="markdownIt-Anchor" href="#设计模式"></a> 设计模式</h2><p><img src="https://i.loli.net/2021/02/25/29BfZ4zpTJDQSLn.png" alt="Design_Pattern.png" /></p><h2 id="前端测试框架对比"><a class="markdownIt-Anchor" href="#前端测试框架对比"></a> 前端测试框架对比</h2><p><img src="https://i.loli.net/2021/02/25/X1wM4iqQUZgRbGK.png" alt="前端测试总结.png" /></p><blockquote><p>未完待续</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#说明&quot;&gt;&lt;/a&gt; 说明&lt;/h2&gt;
&lt;p&gt;面试用的思维导图，总结一些知识点, 由百度脑图制做,　太大了，右键新页面打开吧&lt;/p&gt;
&lt;h2 id=&quot;http-缓存&quot;&gt;&lt;a class=&quot;m</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>在iconfont上字体链接中获取图标svg文件(python)</title>
    <link href="http://aizigao.xyz/2020/07/23/%E5%9C%A8iconfont%E4%B8%8A%E5%AD%97%E4%BD%93%E9%93%BE%E6%8E%A5%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%9B%BE%E6%A0%87svg%E6%96%87%E4%BB%B6/"/>
    <id>http://aizigao.xyz/2020/07/23/%E5%9C%A8iconfont%E4%B8%8A%E5%AD%97%E4%BD%93%E9%93%BE%E6%8E%A5%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%9B%BE%E6%A0%87svg%E6%96%87%E4%BB%B6/</id>
    <published>2020-07-23T13:08:14.000Z</published>
    <updated>2023-08-20T14:33:25.328Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>现在国内越来越多的网站开始用<a href="https://www.iconfont.cn/">Iconfont-阿里巴巴矢量图标库</a>　管理图标. 使用svg或者font图标，这种方式确实很方便并且大大减小了前端开发一部分工作量，当我看到一个网站用了iconfont的图标，并且我非常钟意它的设计时，我就有种想要获取一份它们原始svg文件的冲动，在我尝试一番后，终于让我总结了一波如何快速操作的方法。</p><h2 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h2><p><strong><a href="http://xn--iconfont-2z1p39x.cn">打开iconfont.cn</a>,　我建了一个测试项目,里面两个图标</strong></p><p><img src="https://i.loli.net/2021/03/01/VAT83zxRdBM6Es5.png" alt="iconfont 项目截图" /></p><p>可以看到它提供了三个文件格式</p><ul><li>Unicode</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;iconfont&#x27;</span>;  <span class="comment">/* project id 1760743 */</span></span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/font_1760743_cqc31zkvkvd.eot&#x27;</span>);</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/font_1760743_cqc31zkvkvd.eot?#iefix&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/font_1760743_cqc31zkvkvd.woff2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff2&#x27;</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/font_1760743_cqc31zkvkvd.woff&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/font_1760743_cqc31zkvkvd.ttf&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/font_1760743_cqc31zkvkvd.svg#iconfont&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>font Css</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//at.alicdn.com/t/font_1760743_cqc31zkvkvd.css</span><br></pre></td></tr></table></figure><ul><li><code>symbols</code> 格式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//at.alicdn.com/t/font_1760743_cqc31zkvkvd.js</span><br></pre></td></tr></table></figure><p>从上面看，每个项目都有唯一值是 <code>1760743_cqc31zkvkvd </code>，只有获取这个字段就可以下载到对应的, Unicode下的ttf/woff之类的字体，fontcss的css文件及 symbols,　我这次的目标是导出svg,　感觉symbols格式是最简单的。 如上面的例子中，对应的symbols内容对应的js文件</p><p><img src="https://i.loli.net/2021/03/01/UcCo4Iq2DH9Pk3Q.png" alt="js 里的内容" /></p><p>可以看到<code>el='&lt;svg=....&gt;'</code>里的就是我们需要的svg, 复制格式化一下,内容为一个svg文件，内部有两个symbol</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">symbol</span> <span class="attr">id</span>=<span class="string">&quot;icon-fail&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 1024 1024&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span></span></span><br><span class="line"><span class="tag">      <span class="attr">d</span>=<span class="string">&quot;M512 0C228.69504 0 0 228.69504 0 512s228.69504 512 512 512 512-228.69504 512-512S795.30496 0 512 0zM362.67008 332.36992c7.68 0 15.36 2.98496 21.32992 8.96l130.56 126.1568 130.56-126.1568c5.97504-5.97504 13.64992-8.53504 21.32992-8.32 7.68 0.21504 15.36512 3.2 21.34016 8.32 11.94496 11.94496 11.94496 30.72 0 42.67008l-129.8176 125.44 129.8176 125.44c11.94496 11.94496 11.94496 30.72 0 42.67008-11.94496 11.94496-30.72 11.94496-42.67008 0l-130.56-126.1568-130.56 126.1568c-11.94496 11.94496-30.72 11.94496-42.67008 0-11.94496-11.94496-11.94496-30.72 0-42.67008l129.8176-125.44L341.32992 384c-11.94496-11.94496-11.94496-30.72 0-42.67008a30.09024 30.09024 0 0 1 21.34016-8.96z&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">fill</span>=<span class="string">&quot;#FF4D29&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">symbol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">symbol</span> <span class="attr">id</span>=<span class="string">&quot;icon-waitting-copy&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 1024 1024&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span></span></span><br><span class="line"><span class="tag">      <span class="attr">d</span>=<span class="string">&quot;M512 0C229.23776 0 0 229.23776 0 512s229.23776 512 512 512 512-229.23776 512-512S794.76224 0 512 0z m-16.07168 225.8944a34.13504 34.13504 0 0 1 33.14176 34.11456v286.12096H819.2A34.13504 34.13504 0 0 1 819.2 614.4H494.92992a34.13504 34.13504 0 0 1-33.4592-40.66816 34.13504 34.13504 0 0 1-0.67072-6.52288v-307.2a34.13504 34.13504 0 0 1 35.12832-34.11968z&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">fill</span>=<span class="string">&quot;#FF8000&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">symbol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>symbol转为svg,其它只要替换<code>symbol</code>为<code>svg</code> 就好了，再删除原来的最外部的<code>&lt;svg&gt;&lt;/svg&gt;</code>就可以了，如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">id</span>=<span class="string">&quot;icon-fail&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 1024 1024&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span></span></span><br><span class="line"><span class="tag">    <span class="attr">d</span>=<span class="string">&quot;M512 0C228.69504 0 0 228.69504 0 512s228.69504 512 512 512 512-228.69504 512-512S795.30496 0 512 0zM362.67008 332.36992c7.68 0 15.36 2.98496 21.32992 8.96l130.56 126.1568 130.56-126.1568c5.97504-5.97504 13.64992-8.53504 21.32992-8.32 7.68 0.21504 15.36512 3.2 21.34016 8.32 11.94496 11.94496 11.94496 30.72 0 42.67008l-129.8176 125.44 129.8176 125.44c11.94496 11.94496 11.94496 30.72 0 42.67008-11.94496 11.94496-30.72 11.94496-42.67008 0l-130.56-126.1568-130.56 126.1568c-11.94496 11.94496-30.72 11.94496-42.67008 0-11.94496-11.94496-11.94496-30.72 0-42.67008l129.8176-125.44L341.32992 384c-11.94496-11.94496-11.94496-30.72 0-42.67008a30.09024 30.09024 0 0 1 21.34016-8.96z&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">fill</span>=<span class="string">&quot;#FF4D29&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">id</span>=<span class="string">&quot;icon-waitting-copy&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 1024 1024&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span></span></span><br><span class="line"><span class="tag">    <span class="attr">d</span>=<span class="string">&quot;M512 0C229.23776 0 0 229.23776 0 512s229.23776 512 512 512 512-229.23776 512-512S794.76224 0 512 0z m-16.07168 225.8944a34.13504 34.13504 0 0 1 33.14176 34.11456v286.12096H819.2A34.13504 34.13504 0 0 1 819.2 614.4H494.92992a34.13504 34.13504 0 0 1-33.4592-40.66816 34.13504 34.13504 0 0 1-0.67072-6.52288v-307.2a34.13504 34.13504 0 0 1 35.12832-34.11968z&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">fill</span>=<span class="string">&quot;#FF8000&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>之后就是将svg取出，取到每个svg的<code>id</code>属性做为文件名写入对应文件里就好了，这一块可以写一个脚本处理。</p><h2 id="简化流程"><a class="markdownIt-Anchor" href="#简化流程"></a> 简化流程</h2><p>可以看到整个过程比较通用，我这里写了个python脚本处理一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests <span class="comment"># 自行安装</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_svgs_from_js_link</span>(<span class="params">fileLink</span>):</span><br><span class="line">    <span class="comment"># -- 获取内容</span></span><br><span class="line">    file_content = <span class="built_in">str</span>(requests.get(fileLink).content)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># --- 从js中获取svg内容</span></span><br><span class="line">    svg_str_regex = <span class="string">r&quot;\&lt;svg\&gt;(.*?)\&lt;\/svg\&gt;&quot;</span></span><br><span class="line">    matches = re.findall(svg_str_regex, file_content)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 有svg时</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(matches):</span><br><span class="line">        svg_str = re.sub(<span class="string">r&#x27;symbol&#x27;</span>, <span class="string">&#x27;svg&#x27;</span>, matches[<span class="number">0</span>])</span><br><span class="line">        svg_str = re.sub(<span class="string">&#x27;&lt;/svg&gt;&#x27;</span>, <span class="string">&#x27;&lt;/svg&gt;@@@&#x27;</span>, svg_str)</span><br><span class="line">        svg_list = svg_str.split(<span class="string">&#x27;@@@&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 清理dist</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(<span class="string">&#x27;./dist&#x27;</span>):</span><br><span class="line">            shutil.rmtree(<span class="string">&quot;./dist&quot;</span>)</span><br><span class="line">        os.mkdir(<span class="string">&#x27;./dist&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> svgContent <span class="keyword">in</span> svg_list:</span><br><span class="line">            <span class="keyword">if</span> svgContent:</span><br><span class="line">                fileName = re.findall(<span class="string">r&#x27;id=\&quot;(.*?)\&quot;&#x27;</span>, svgContent)[<span class="number">0</span>]</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;写入icon %s&#x27;</span> % fileName)</span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./dist/%s.svg&quot;</span> % fileName, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">                f.write(svgContent)</span><br><span class="line">                f.close()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;搞定啦!!!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;使用方式如: \n python3 ./icon_symbol_to_svg http://at.alicdn.com/t/font_1760743_cqc31zkvkvd.js&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        get_svgs_from_js_link(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 ./icon_symbol_to_svg http://at.alicdn.com/t/font_1760743_cqc31zkvkvd.js</span><br></pre></td></tr></table></figure><p>然后你在dist文件下你可以看到所有的svg了</p><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2><ul><li>写了脚本后方便了很多，细节就不考虑了，能用就行;</li><li>python脚本简简写写还是比node方便一点,　不带node_module走比较方便，下次试试deno版本的。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;现在国内越来越多的网站开始用&lt;a href=&quot;https://www.iconfont.cn/&quot;&gt;Iconfont-阿里巴巴矢量图标库&lt;/a&gt;　</summary>
      
    
    
    
    
    <category term="脚本" scheme="http://aizigao.xyz/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="python" scheme="http://aizigao.xyz/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>JS中枚举类型个人处理方式(BraketEnum)</title>
    <link href="http://aizigao.xyz/2020/06/03/JS%E4%B8%AD%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E4%B8%AA%E4%BA%BA%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/"/>
    <id>http://aizigao.xyz/2020/06/03/JS%E4%B8%AD%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E4%B8%AA%E4%BA%BA%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/</id>
    <published>2020-06-03T12:56:08.000Z</published>
    <updated>2023-08-20T14:36:09.901Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>众所周知JS中没有枚举类型，TS是有的，但是也不是很好用； 在我们日常开发中<code>mysql</code>的 <code>Enums</code> 类型大概率也是没有人用的，原因是添加一个<code>enum</code>需要 <code>Alter</code> 整张表，以至于到我们前端这边，获取到的 <code>state</code>, <code>status</code> 啥的永远是 <code>0,1,2,3,4,5</code> 这样的数字，如果不对这些 <code>enum</code> 进行处理，在代码就会出现一堆的如下面的代码：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;state === <span class="number">1</span> &amp;&amp; (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>xxxx<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">)&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (state===<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// ---</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>已我浅薄的经验来看，像上面的这个样子的代码，你维护个一段时间，也就看不懂了.jpg 。。。</p><h2 id="ts中的enums"><a class="markdownIt-Anchor" href="#ts中的enums"></a> TS中的Enums</h2><p>现在大家都开始用TS了，在 TS 中的 <a href="https://www.typescriptlang.org/docs/handbook/enums.html">enum</a> 两种模式，一种是数字，一种是 <code>map</code> 结构。</p><p><strong>数字</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Direction</span> &#123;</span><br><span class="line">  <span class="title class_">Up</span> = <span class="number">1</span>,</span><br><span class="line">  <span class="title class_">Down</span>,</span><br><span class="line">  <span class="title class_">Left</span>,</span><br><span class="line">  <span class="title class_">Right</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Direction</span>.<span class="property">Up</span>) <span class="comment">// 0</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Direction</span>[<span class="number">0</span>]) <span class="comment">// &quot;Up&quot;</span></span><br></pre></td></tr></table></figure><p>相当于下面,见<a href="https://www.typescriptlang.org/play#code/KYOwrgtgBAIglgJ2AYwC5wPYigbwFBRQCqADlALxQCMANAbBgO4h2EAywAZqq1AEpwA5gAseeAL5A">demo</a> (注：ts官方的这个 <code>try</code>, 先关闭 <code>adb</code> 或 <code>ublock</code> 广告插件)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">Direction</span>;</span><br><span class="line">(<span class="keyword">function</span> (<span class="params">Direction</span>) &#123;</span><br><span class="line">    <span class="title class_">Direction</span>[<span class="title class_">Direction</span>[<span class="string">&quot;Up&quot;</span>] = <span class="number">1</span>] = <span class="string">&quot;Up&quot;</span>;</span><br><span class="line">    <span class="title class_">Direction</span>[<span class="title class_">Direction</span>[<span class="string">&quot;Down&quot;</span>] = <span class="number">2</span>] = <span class="string">&quot;Down&quot;</span>;</span><br><span class="line">    <span class="title class_">Direction</span>[<span class="title class_">Direction</span>[<span class="string">&quot;Left&quot;</span>] = <span class="number">3</span>] = <span class="string">&quot;Left&quot;</span>;</span><br><span class="line">    <span class="title class_">Direction</span>[<span class="title class_">Direction</span>[<span class="string">&quot;Right&quot;</span>] = <span class="number">4</span>] = <span class="string">&quot;Right&quot;</span>;</span><br><span class="line">&#125;)(<span class="title class_">Direction</span> || (<span class="title class_">Direction</span> = &#123;&#125;));</span><br></pre></td></tr></table></figure><p><strong>map</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Direction</span> &#123;</span><br><span class="line">  <span class="title class_">Up</span> = <span class="string">&quot;UP&quot;</span>,</span><br><span class="line">  <span class="title class_">Down</span> = <span class="string">&quot;DOWN&quot;</span>,</span><br><span class="line">  <span class="title class_">Left</span> = <span class="string">&quot;LEFT&quot;</span>,</span><br><span class="line">  <span class="title class_">Right</span> = <span class="string">&quot;RIGHT&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相当于<a href="https://www.typescriptlang.org/play?ssl=1&amp;ssc=1&amp;pln=6&amp;pc=2#code/KYOwrgtgBAIglgJ2AYwC5wPYigbwFBRQCqADlALxQBERAClQDQGwYDu2lVMA8gOoByjZgBlgAM1QVqwgKIAxACpDCAJTgBzABaTOKgJIBxABJKmAXyA">demo</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Direction</span>;</span><br><span class="line">(<span class="keyword">function</span> (<span class="params">Direction</span>) &#123;</span><br><span class="line">    <span class="title class_">Direction</span>[<span class="string">&quot;Up&quot;</span>] = <span class="string">&quot;UP&quot;</span>;</span><br><span class="line">    <span class="title class_">Direction</span>[<span class="string">&quot;Down&quot;</span>] = <span class="string">&quot;DOWN&quot;</span>;</span><br><span class="line">    <span class="title class_">Direction</span>[<span class="string">&quot;Left&quot;</span>] = <span class="string">&quot;LEFT&quot;</span>;</span><br><span class="line">    <span class="title class_">Direction</span>[<span class="string">&quot;Right&quot;</span>] = <span class="string">&quot;RIGHT&quot;</span>;</span><br><span class="line">&#125;)(<span class="title class_">Direction</span> || (<span class="title class_">Direction</span> = &#123;&#125;));</span><br></pre></td></tr></table></figure><p>我们想想我们日常使用 <code>enum</code> 的地方:</p><ul><li>做条件判断, 不同条件下执行不到代码</li><li>在 select 或者其它地方做为 <code>label</code> 和 <code>value</code>，并且需要按一定顺序</li><li>…</li></ul><p>在我看来 TS 中的 <code>enum</code> 并不能满足我的需求, 下面我们看下后台java 的定义方式。</p><h2 id="java-中的enums"><a class="markdownIt-Anchor" href="#java-中的enums"></a> JAVA 中的Enums</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">StateEnum</span> &#123;</span><br><span class="line">    <span class="string">&#x27;AUDIT_WAIT&#x27;</span>, (<span class="number">1</span>, <span class="string">&#x27;审核中&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;AUDIT_PASS&#x27;</span>, (<span class="number">2</span>, <span class="string">&#x27;审核通过&#x27;</span>)</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由我们可以看到 Java 中大致是下面的方式定义enums的:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code, value, desc</span><br></pre></td></tr></table></figure><p>结构也是比较清晰，那么我们也能按上面的结构仿制一个我们自已的 <code>enum</code> 了。</p><h2 id="个人解决方案"><a class="markdownIt-Anchor" href="#个人解决方案"></a> 个人解决方案</h2><p>对于日常开发中，你可以会直接到 <code>Object</code> 创建，如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">StateEnum</span> = &#123;</span><br><span class="line">    <span class="string">&#x27;AUDIT_WAIT&#x27;</span>: [<span class="number">1</span>, <span class="string">&#x27;审核中&#x27;</span>]</span><br><span class="line">    <span class="string">&#x27;AUDIT_PASS&#x27;</span>: [<span class="number">2</span>, <span class="string">&#x27;审核通过&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是要说的是，Object 本身在遍历的时候有特殊顺序的，可以在<a href="https://javascript.info/object#ordered-like-an-object">这篇文章</a>里看到具体的说明, 也就是说不能按我们在代码中书写的顺序遍历；而在我们日常开发经常要干的一件事就是遍历它，生成一个下拉的 <code>Select</code>，所以Object 真的不适合，好在 <code>ES6</code> 里的 <code>Map</code> 就是有索引又有顺序的好东西，所以我用 <code>Map</code> 为基础加一个自已的包。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">StateEnum</span> = <span class="keyword">new</span> <span class="title class_">Map</span>([</span><br><span class="line">    [<span class="string">&#x27;AUDIT_WAIT&#x27;</span>, [<span class="number">1</span>, <span class="string">&#x27;审核中&#x27;</span>, <span class="string">&#x27;extra&#x27;</span>]]</span><br><span class="line">    [<span class="string">&#x27;AUDIT_PASS&#x27;</span>, [<span class="number">2</span>, <span class="string">&#x27;审核通过&#x27;</span>, <span class="string">&#x27;extra&#x27;</span>]]</span><br><span class="line">])</span><br></pre></td></tr></table></figure><h2 id="bracketenum"><a class="markdownIt-Anchor" href="#bracketenum"></a> BracketEnum</h2><p>我将我的想法做成了一个小的 <code>npm</code> 包， 我叫它 <a href="https://github.com/aizigao/BracketEnum">BracketEnum</a>, 由于 Typescript 的泛型支持，在 <code>VSCode</code> 下体验良好。</p><p><img src="https://i.loli.net/2021/03/01/9SjxY5QD7nqTZzp.gif" alt="demo gif" /></p><p>如果要看定义话，鼠标移上去就能见到</p><p><img src="https://i.loli.net/2021/03/01/Lam54Zhub8PXRBH.png" alt="image.png" /></p><p><strong>安装</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add bracket-enum</span><br></pre></td></tr></table></figure><p><strong>定义一个Enum</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BracketEnum</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;bracket-enum&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">STATUS</span> = <span class="title class_">BracketEnum</span>.<span class="title function_">of</span>([</span><br><span class="line"><span class="comment">// [CODE, [VALUE, DESC, EXTR]]</span></span><br><span class="line">[<span class="string">&#x27;AUDIT_WAIT&#x27;</span>, [<span class="number">1</span>, <span class="string">&#x27;审核中&#x27;</span>, <span class="string">&#x27;extra1&#x27;</span>]],</span><br><span class="line">[<span class="string">&#x27;AUDIT_PASS&#x27;</span>, [<span class="number">2</span>, <span class="string">&#x27;审核通过&#x27;</span>, <span class="string">&#x27;extra2&#x27;</span>]],</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// --- 或者</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">STATUS_2</span> = <span class="keyword">new</span> <span class="title class_">BracketEnum</span>([</span><br><span class="line"><span class="comment">// [CODE, [VALUE, DESC, EXTR]]</span></span><br><span class="line">[<span class="string">&#x27;AUDIT_WAIT&#x27;</span>, [<span class="number">1</span>, <span class="string">&#x27;审核中&#x27;</span>, <span class="string">&#x27;extra1&#x27;</span>]],</span><br><span class="line">[<span class="string">&#x27;AUDIT_PASS&#x27;</span>, [<span class="number">2</span>, <span class="string">&#x27;审核通过&#x27;</span>, <span class="string">&#x27;extra2&#x27;</span>]],</span><br><span class="line">]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>推荐使用 <code>BreacketEnum.of</code> 方式创建, 容易忘记写 <code>new</code></p></blockquote><p><strong>基本使用</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 由 code 得到 value</span></span><br><span class="line"><span class="variable constant_">STATUS</span>.<span class="title function_">getValueByCode</span>(<span class="string">&#x27;AUDIT_PASS&#x27;</span>) <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 由 code 得到 desc</span></span><br><span class="line"><span class="variable constant_">STATUS</span>.<span class="title function_">getDescByCode</span>(<span class="string">&#x27;AUDIT_WAIT&#x27;</span>) <span class="comment">//&#x27;审核中&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 由 value 得到 desc</span></span><br><span class="line"><span class="variable constant_">STATUS</span>.<span class="title function_">getDescByValue</span>(<span class="number">2</span>) <span class="comment">// &#x27;审核通过&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 由 value 得到 extra</span></span><br><span class="line"><span class="variable constant_">STATUS</span>.<span class="title function_">getDescByExtra</span>(<span class="number">2</span>) <span class="comment">// extra2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 所有 value</span></span><br><span class="line"><span class="variable constant_">STATUS</span>.<span class="title function_">getAllValues</span>() <span class="comment">// [1, 2] 拿到数组，可以用于遍历生成</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断 当前是 pass 状态</span></span><br><span class="line"><span class="keyword">const</span> currentState = <span class="number">2</span></span><br><span class="line"><span class="variable constant_">STATUS</span>.<span class="title function_">checkValueByCode</span>(<span class="string">&#x27;AUDIT_PASS&#x27;</span>, currentState) <span class="comment">// true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>扩展</strong></p><p>因为这个小玩意代码也没有什么内容，本身用 <code>class</code> 构建，如果要自已添加一个对应的处理方法也很简单</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 扩展</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">myEnums</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Dtnums</span>&#123;</span><br><span class="line">  <span class="comment">// ---</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> <span class="title function_">myEnums</span>([])</span><br><span class="line">myEnums.<span class="title function_">of</span>([])</span><br></pre></td></tr></table></figure><p>比我因为经常用 <code>antd</code>, 所以把生成 <code>antd</code> 里 <code>Select</code> 需要用的 <code>Options</code> 结构内置了, 你如果需要定义话，可以按下面的方式</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">myEnums</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Dtnums</span>&#123;</span><br><span class="line">  <span class="title function_">toMyFormOptions</span>(<span class="attr">hasAll</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>): <span class="built_in">any</span>[] &#123;</span><br><span class="line">    <span class="keyword">const</span> allOption = &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">value</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">label</span>: <span class="string">&#x27;全部&#x27;</span>,</span><br><span class="line">      <span class="attr">extra</span>: <span class="literal">null</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// eslint-disable-next-line @typescript-eslint/no-unused-vars</span></span><br><span class="line">    <span class="keyword">const</span> result = <span class="variable language_">this</span>.<span class="property">configList</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">[code, [value, desc, extra]]</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">key</span>: value,</span><br><span class="line">        value,</span><br><span class="line">        <span class="attr">label</span>: desc,</span><br><span class="line">        extra,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hasAll) &#123;</span><br><span class="line">      <span class="keyword">return</span> [allOption, ...result];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化；</span></span><br><span class="line">myEnums.<span class="title function_">of</span>([])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>其它内置的方法</strong></p><ul><li><code>toFormOptions([hasAll:Boolean])</code> 生成 <code>antd</code> 的 <code>options</code></li><li><code>toFormValueEnum</code> 转为antd pro table 需要的ValueEnum</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;众所周知JS中没有枚举类型，TS是有的，但是也不是很好用； 在我们日常开发中&lt;code&gt;mysql&lt;/code&gt;的 &lt;code&gt;Enums&lt;/c</summary>
      
    
    
    
    
    <category term="web 前端" scheme="http://aizigao.xyz/tags/web-%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>nginx_个人常用功能记录一下</title>
    <link href="http://aizigao.xyz/2020/05/23/nginx-%E4%B8%AA%E4%BA%BA%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B/"/>
    <id>http://aizigao.xyz/2020/05/23/nginx-%E4%B8%AA%E4%BA%BA%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B/</id>
    <published>2020-05-23T06:41:22.000Z</published>
    <updated>2023-08-20T14:33:06.221Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nginx的三大主要功能"><a class="markdownIt-Anchor" href="#nginx的三大主要功能"></a> Nginx的三大主要功能</h2><ul><li>静态web服务器</li><li>反向代理</li><li>负载均衡</li></ul><h2 id="location"><a class="markdownIt-Anchor" href="#location"></a> location</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~      波浪线表示执行一个正则匹配，区分大小写</span><br><span class="line">~*    表示执行一个正则匹配，不区分大小写</span><br><span class="line">^~    ^~表示普通字符匹配，如果该选项匹配，只匹配该选项，不匹配别的选项，一般用来匹配目录</span><br><span class="line">=     进行普通字符精确匹配</span><br><span class="line">@     &quot;@&quot; 定义一个命名的 location，@定义的locaiton名字一般用在内部定向，例如error_page, try_files命令中。它的功能类似于编程中的goto。</span><br></pre></td></tr></table></figure><p><strong>优先级</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">= &gt; ~^ &gt; ~ = ~* &gt;最长前缀匹配 &gt; /</span><br></pre></td></tr></table></figure><p>** <code>@</code> 命名空间 **</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span>  /images &#123;</span><br><span class="line">  <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ <span class="variable">@name</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">location</span>  <span class="variable">@name</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="upstream"><a class="markdownIt-Anchor" href="#upstream"></a> UpStream</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">upstream</span> backend &#123;</span><br><span class="line">    <span class="attribute">server</span> backend1.example.com       weight=<span class="number">5</span>;</span><br><span class="line">    <span class="attribute">server</span> backend2.example.com:<span class="number">8080</span>;</span><br><span class="line">    <span class="attribute">server</span> unix:/tmp/backend3;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> backup1.example.com:<span class="number">8080</span>   backup;</span><br><span class="line">    <span class="attribute">server</span> backup2.example.com:<span class="number">8080</span>   backup;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://backend;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="break"><a class="markdownIt-Anchor" href="#break"></a> break</h3><p>作用域：server,location,if</p><p>停止执行当前虚拟主机的后续rewrite指令集<br />break指令实例：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">if</span> (<span class="variable">$slow</span>) &#123;</span><br><span class="line">     <span class="attribute">limit_rate</span> <span class="number">10k</span>;</span><br><span class="line">     break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if"><a class="markdownIt-Anchor" href="#if"></a> if</h3><p>支持if条件判断，但不支持else</p><p>一个变量名；false如果这个变量是空字符串或者以0开始的字符串；</p><ul><li>使用= ,!= 比较的一个变量和字符串</li><li>是用~， ~*与正则表达式匹配的变量，如果这个正则表达式中包含}，;则整个表达式需要用&quot; 或’ 包围</li><li>使用-f ，!-f 检查一个文件是否存在</li><li>使用-d, !-d 检查一个目录是否存在</li><li>使用-e ，!-e 检查一个文件、目录、符号链接是否存在</li><li>使用-x ， !-x 检查一个文件是否可执行</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">if</span> (<span class="variable">$http_user_agent</span> <span class="regexp">~ MSIE)</span> &#123;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^(.*)$</span> /msie/<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$http_cookie</span> <span class="regexp">~* &quot;id=([^</span>;]+)(?:;|$)&quot;) &#123;</span><br><span class="line">    <span class="attribute">set</span> <span class="variable">$id</span> <span class="variable">$1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$request_method</span> = POST) &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">405</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$slow</span>) &#123;</span><br><span class="line">    <span class="attribute">limit_rate</span> <span class="number">10k</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$invalid_referer</span>) &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="return"><a class="markdownIt-Anchor" href="#return"></a> return</h3><p>停止处理并返回指定状态码(code)给客户端。<br />非标准状态码444表示关闭连接且不给客户端发响应头。<br />从0.8.42版本起，return 支持响应URL重定向(对于301，302，303，307），或者文本响应(对于其他状态码).</p><h3 id="rewrite"><a class="markdownIt-Anchor" href="#rewrite"></a> rewrite</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rewrite</span> regex replacement [flag];</span><br></pre></td></tr></table></figure><p><strong>flag:</strong></p><ul><li>last 停止处理后续rewrite指令集，然后对当前重写的新URI在rewrite指令集上重新查找。</li><li>break 停止处理后续rewrite指令集，并不在重新查找,但是当前location内剩余非rewrite语句和location外的的非rewrite语句可以执行。</li><li>redirect 如果replacement不是以http:// 或<a href="https://xn--exsz4j">https://开始</a>，返回302临时重定向</li><li>permant 返回301永久重定向</li></ul><p>作用域：server,location,if</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^(/download/.*)/media/(.*)..*$</span> <span class="variable">$1</span>/mp3/<span class="variable">$2</span>.mp3 <span class="literal">last</span>;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^(/download/.*)/audio/(.*)..*$</span> <span class="variable">$1</span>/mp3/<span class="variable">$2</span>.ra <span class="literal">last</span>;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反向代理"><a class="markdownIt-Anchor" href="#反向代理"></a> 反向代理</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.nginx.cn nginx.cn;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> /app &#123;</span><br><span class="line">       <span class="attribute">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="强制https"><a class="markdownIt-Anchor" href="#强制https"></a> 强制https</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">if</span> ($**http_x_forwarded_proto** = <span class="string">&quot;http&quot;</span>) &#123;</span><br><span class="line">   <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;nginx的三大主要功能&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#nginx的三大主要功能&quot;&gt;&lt;/a&gt; Nginx的三大主要功能&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;静态web服务器&lt;/li&gt;
&lt;li&gt;反向代理&lt;/li&gt;
&lt;li&gt;负载均衡</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>看完了贝赛尔函数wiki,我终于看懂了</title>
    <link href="http://aizigao.xyz/2020/04/23/%E7%9C%8B%E5%AE%8C%E4%BA%86%E8%B4%9D%E8%B5%9B%E5%B0%94%E5%87%BD%E6%95%B0wiki-%E6%88%91%E7%BB%88%E4%BA%8E%E7%90%86%E8%A7%A3%E8%BF%99%E7%8E%A9%E6%84%8F%E4%BA%86/"/>
    <id>http://aizigao.xyz/2020/04/23/%E7%9C%8B%E5%AE%8C%E4%BA%86%E8%B4%9D%E8%B5%9B%E5%B0%94%E5%87%BD%E6%95%B0wiki-%E6%88%91%E7%BB%88%E4%BA%8E%E7%90%86%E8%A7%A3%E8%BF%99%E7%8E%A9%E6%84%8F%E4%BA%86/</id>
    <published>2020-04-23T06:25:44.000Z</published>
    <updated>2023-08-20T14:33:55.862Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>在平时写动画时我们总会使用一些缓动函数，我个人有时会 <a href="https://github.com/danro/easing-js/blob/master/easing.js">easing-js</a> 抄抄算法，或者 <a href="https://matthewlein.com/tools/ceaser">ceaser</a> 还有 <a href="https://cubic-bezier.com/">cubic-bezier</a>下调节一下控制点，拿到一个贝赛尔曲线的配置。然而我却一实不是很懂贝赛尔函数这个控制点，直到看了一下wiki…</p><h2 id="wiki"><a class="markdownIt-Anchor" href="#wiki"></a> wiki</h2><p>我们打开 <a href="https://en.wikipedia.org/wiki/B%C3%A9zier_curve">贝赛尔函数wiki</a>, 可以看到一堆的动图, 如下我copy了一份作为记录：</p><p><img src="https://i.loli.net/2021/03/01/w6suVraLZhSYPXE.gif" alt="Bézier_1_big.gif" /><br /><img src="https://i.loli.net/2021/03/01/gi69EbO4jU7LRh1.gif" alt="Bézier_2_big.gif" /><br /><img src="https://i.loli.net/2021/03/01/6q21fPLMx7bzSrR.gif" alt="Bézier_3_big.gif" /></p><p>从上面的图，我们可以有所感觉了，原来这几个控制写的是点移动的趋势啊， 瞬间感觉还是wiki好使，但仅仅限于英文 wiki, 之前看中文的 wiki 就没有这些内容了。然后对wiki上的具体实现公式我就懒得看了，我只要知道这个控制点是啥意思就够了，存下这几张图足够使用了, 具体还是看看 wiki 。</p><h2 id="具体公式实现"><a class="markdownIt-Anchor" href="#具体公式实现"></a> 具体公式实现</h2><p>TODO: 之后有时间再试试</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ul><li><a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A">Bézier_curve</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;在平时写动画时我们总会使用一些缓动函数，我个人有时会 &lt;a href=&quot;https://github.com/danro/easing-js/b</summary>
      
    
    
    
    
    <category term="css" scheme="http://aizigao.xyz/tags/css/"/>
    
    <category term="动画" scheme="http://aizigao.xyz/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>看完这张图后，我终于记住了chmod的数值了(标志位与掩码的操作)</title>
    <link href="http://aizigao.xyz/2020/04/01/%E7%9C%8B%E5%AE%8C%E8%BF%99%E5%BC%A0%E5%9B%BE%E5%90%8E%EF%BC%8C%E6%88%91%E7%BB%88%E4%BA%8E%E8%AE%B0%E4%BD%8F%E4%BA%86chmod%E7%9A%84%E6%95%B0%E5%80%BC%E4%BA%86_%E6%A0%87%E5%BF%97%E4%BD%8D%E4%B8%8E%E6%8E%A9%E7%A0%81%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://aizigao.xyz/2020/04/01/%E7%9C%8B%E5%AE%8C%E8%BF%99%E5%BC%A0%E5%9B%BE%E5%90%8E%EF%BC%8C%E6%88%91%E7%BB%88%E4%BA%8E%E8%AE%B0%E4%BD%8F%E4%BA%86chmod%E7%9A%84%E6%95%B0%E5%80%BC%E4%BA%86_%E6%A0%87%E5%BF%97%E4%BD%8D%E4%B8%8E%E6%8E%A9%E7%A0%81%E7%9A%84%E6%93%8D%E4%BD%9C/</id>
    <published>2020-04-01T06:26:56.000Z</published>
    <updated>2023-08-20T14:33:53.865Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a class="markdownIt-Anchor" href="#简述"></a> 简述</h2><p>Linux chmod（英文全拼：change mode）命令是控制用户对文件的权限的命令, 一般我们写 <code>sudo chmod 777</code> 时对应的是对文件所有者（Owner）、用户组（Group）、其它用户（Other Users）都加上读, 写和执行的权限。</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/08/file-permissions-rwx.jpg" alt="来源于菜鸟教程" /></p><p>我们知道读，写，执行 对应的具体数值是 4，2，1, 但是这几个数值点我一直是记不住的，好在可以写<code>sudo chmod +wr</code>之类的，直到我翻看了下 <a href="https://en.wikipedia.org/wiki/Chmod">wiki</a>, 看到了这样一张表</p><table><thead><tr><th style="text-align:center">#</th><th style="text-align:center">Permission</th><th style="text-align:center">rwx</th><th style="text-align:center">Binary</th></tr></thead><tbody><tr><td style="text-align:center">7</td><td style="text-align:center">read, write and execute</td><td style="text-align:center">rwx</td><td style="text-align:center">111</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">read and write</td><td style="text-align:center">rw-</td><td style="text-align:center">110</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">read and execute</td><td style="text-align:center">r-x</td><td style="text-align:center">101</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">read only</td><td style="text-align:center">r–</td><td style="text-align:center">100</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">write and execute</td><td style="text-align:center">-wx</td><td style="text-align:center">011</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">write only</td><td style="text-align:center">-w-</td><td style="text-align:center">010</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">execute only</td><td style="text-align:center">–x</td><td style="text-align:center">001</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">none</td><td style="text-align:center">—</td><td style="text-align:center">000</td></tr></tbody></table><p>懂了，421都是对应的二进制表示上的 1/0，1为开，0为关闭，极为清晰。然后也翻阅了一下 mdn 的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators">按位操作符</a>, 学习了下标志位与掩码的操作。</p><h2 id="标志位与掩码的操作"><a class="markdownIt-Anchor" href="#标志位与掩码的操作"></a> 标志位与掩码的操作</h2><p>下面的例子来自MDN</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="variable constant_">FLAG_A</span> = <span class="number">0b0001</span>; <span class="comment">// 0001 ant</span></span><br><span class="line"><span class="keyword">var</span> <span class="variable constant_">FLAG_B</span> = <span class="number">0b0010</span>; <span class="comment">// 0010 bat</span></span><br><span class="line"><span class="keyword">var</span> <span class="variable constant_">FLAG_C</span> = <span class="number">0b0100</span>; <span class="comment">// 0100 cat</span></span><br><span class="line"><span class="keyword">var</span> <span class="variable constant_">FLAG_D</span> = <span class="number">0b1000</span>; <span class="comment">// 1000 duck</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> mask = <span class="variable constant_">FLAG_A</span> | <span class="variable constant_">FLAG_B</span> | <span class="variable constant_">FLAG_D</span>; <span class="comment">// 0001 | 0010 | 1000 =&gt; 1011</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> flags = <span class="number">0b001</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果我们有 cat</span></span><br><span class="line"><span class="keyword">if</span> (flags &amp; <span class="variable constant_">FLAG_C</span>) &#123; <span class="comment">// 0101 &amp; 0100 =&gt; 0100 =&gt; true</span></span><br><span class="line">   <span class="comment">// do stuff</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果我们有 bat 或者 cat 至少一个</span></span><br><span class="line"><span class="comment">// (0101 &amp; 0010) || (0101 &amp; 0100) =&gt; 0000 || 0100 =&gt; true</span></span><br><span class="line"><span class="keyword">if</span> ((flags &amp; <span class="variable constant_">FLAG_B</span>) || (flags &amp; <span class="variable constant_">FLAG_C</span>)) &#123;</span><br><span class="line">   <span class="comment">// do stuff</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果我们有 bat 或者 cat 至少一个</span></span><br><span class="line"><span class="keyword">var</span> mask = <span class="variable constant_">FLAG_B</span> | <span class="variable constant_">FLAG_C</span>; <span class="comment">// 0010 | 0100 =&gt; 0110</span></span><br><span class="line"><span class="keyword">if</span> (flags &amp; mask) &#123; <span class="comment">// 0101 &amp; 0110 =&gt; 0100 =&gt; true</span></span><br><span class="line">   <span class="comment">// do stuff</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们有 cat 和 duck</span></span><br><span class="line"><span class="keyword">var</span> mask = <span class="variable constant_">FLAG_C</span> | <span class="variable constant_">FLAG_D</span>; <span class="comment">// 0100 | 1000 =&gt; 1100</span></span><br><span class="line">flags |= mask;   <span class="comment">// 0101 | 1100 =&gt; 1101</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们没有 ant 也没有 cat</span></span><br><span class="line"><span class="keyword">var</span> mask = ~(<span class="variable constant_">FLAG_A</span> | <span class="variable constant_">FLAG_C</span>); <span class="comment">// ~0101 =&gt; 1010</span></span><br><span class="line">flags &amp;= mask;   <span class="comment">// 1101 &amp; 1010 =&gt; 1000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们没有 ant 也没有 cat</span></span><br><span class="line"><span class="keyword">var</span> mask = ~<span class="variable constant_">FLAG_A</span> &amp; ~<span class="variable constant_">FLAG_C</span>;</span><br><span class="line">flags &amp;= mask;   <span class="comment">// 1101 &amp; 1010 =&gt; 1000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果我们以前没有 bat ，那么我们现在有 bat</span></span><br><span class="line"><span class="comment">// 但是如果我们已经有了一个，那么现在没有了</span></span><br><span class="line"><span class="comment">// 对 cat 也是相同的情况</span></span><br><span class="line"><span class="keyword">var</span> mask = <span class="variable constant_">FLAG_B</span> | <span class="variable constant_">FLAG_C</span>;</span><br><span class="line">flags = flags ^ mask;   <span class="comment">// 1100 ^ 0110 =&gt; 1010</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// entering parallel universe...</span></span><br><span class="line">flags = ~flags;    <span class="comment">// ~1010 =&gt; 0101</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样大大的简化比较，在React也大量使用这种方式；</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#简述&quot;&gt;&lt;/a&gt; 简述&lt;/h2&gt;
&lt;p&gt;Linux chmod（英文全拼：change mode）命令是控制用户对文件的权限的命令, 一般我们写 &lt;code&gt;sudo chmod 77</summary>
      
    
    
    
    
    <category term="个人笔记" scheme="http://aizigao.xyz/tags/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>配置nginx-sourceMap只供内网访问</title>
    <link href="http://aizigao.xyz/2020/03/25/%E9%85%8D%E7%BD%AEnginx-sourceMap%E5%8F%AA%E4%BE%9B%E5%86%85%E7%BD%91%E8%AE%BF%E9%97%AE/"/>
    <id>http://aizigao.xyz/2020/03/25/%E9%85%8D%E7%BD%AEnginx-sourceMap%E5%8F%AA%E4%BE%9B%E5%86%85%E7%BD%91%E8%AE%BF%E9%97%AE/</id>
    <published>2020-03-25T14:03:27.000Z</published>
    <updated>2023-08-18T02:07:53.774Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近一直研究部署 <a href="https://sentry.io/welcome/">Sentry.io</a> 的本地化部署，处理了几个小时，现在终于可以在我司的CICD平台里实现上传SourceMap了. 但是总觉得让别人直接看到我们的 sourceMap 不是很安全的样子，于日究竟了一下在 nginx 里限制只在我们局域网内看 SouceMap 的方式.</p><h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>方式来自 <a href="https://docs.fundebug.com/notifier/javascript/sourcemap/download.html">https://docs.fundebug.com/notifier/javascript/sourcemap/download.html</a>,</p><p>打开 <code>etc/nginx</code> 加入下面这句</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> <span class="regexp">~ ^/dist/(.+)\.map$</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">allow</span> <span class="number">120</span>.<span class="number">77</span>.xx.xxx; <span class="comment"># 局域网ip</span></span><br><span class="line">    <span class="attribute">deny</span> all;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://xxx.xxx.xx.xxx:8000; <span class="comment"># 代理地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近一直研究部署 &lt;a href=&quot;https://sentry.io/welcome/&quot;&gt;Sentry.io&lt;/a&gt; 的本地化部署，处理了</summary>
      
    
    
    
    
    <category term="个人笔记" scheme="http://aizigao.xyz/tags/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    <category term="nginx" scheme="http://aizigao.xyz/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>个人笔记，英语中的介词</title>
    <link href="http://aizigao.xyz/2020/03/23/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%EF%BC%8C%E8%8B%B1%E8%AF%AD%E4%B8%AD%E7%9A%84%E4%BB%8B%E8%AF%8D/"/>
    <id>http://aizigao.xyz/2020/03/23/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%EF%BC%8C%E8%8B%B1%E8%AF%AD%E4%B8%AD%E7%9A%84%E4%BB%8B%E8%AF%8D/</id>
    <published>2020-03-23T06:30:43.000Z</published>
    <updated>2023-08-20T14:33:11.653Z</updated>
    
    <content type="html"><![CDATA[<p>各样图片.jpg</p><p><img src="https://imgur.com/CIAqasS.jpg" alt="Imgur" /><br /><img src="https://imgur.com/0gHZiky.jpg" alt="Imgur" /><br /><img src="https://imgur.com/FORHLse.jpg" alt="Imgur" /><br /><img src="https://imgur.com/4PhYZyX.jpg" alt="Imgur" /><br /><img src="https://imgur.com/p8nFKmp.jpg" alt="Imgur" /><br /><img src="https://imgur.com/o1xRESl.jpg" alt="Imgur" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;各样图片.jpg&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://imgur.com/CIAqasS.jpg&quot; alt=&quot;Imgur&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;https://imgur.com/0gHZiky.jpg&quot; alt=&quot;Imgur&quot; /&gt;&lt;br </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>小程序二维码中如何使用二进制模式</title>
    <link href="http://aizigao.xyz/2020/02/23/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%8C%E7%BB%B4%E7%A0%81%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%A8%A1%E5%BC%8F/"/>
    <id>http://aizigao.xyz/2020/02/23/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%8C%E7%BB%B4%E7%A0%81%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%A8%A1%E5%BC%8F/</id>
    <published>2020-02-23T13:06:24.000Z</published>
    <updated>2023-08-20T14:38:08.451Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>最近在为我们的公交小程序添加二维码功能，挺简单的需求对吧？我整了好两天了，我原本以为一个二维码能有什么复杂的，文本是什么内容，扫出来是什么内容就完了。没有想到公司用的是二进制模式下二维码，我翻阅了 github 上现在小程序中专门做二维码的库，发现没有实现这个功能的，后来就改采取了一种中转的模式。</p><h2 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h2><p>我现在的二维码数据如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="linespan><br></pre></td></tr></table></figure><p>我在 web 端下发现在 <a href="https://www.npmjs.com/package/qrcode">node-qrcode</a>这个库可以很轻松的输入二进制的二维码，但是这个库在小程序端现在跑不起来, 主要是不支持Buffer</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Regular array example</span></span><br><span class="line"><span class="comment">// WARNING: Element values will be clamped to 0-255 even if your data contains higher values.</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">QRCode</span> = <span class="built_in">require</span>(<span class="string">&#x27;qrcode&#x27;</span>)</span><br><span class="line"><span class="title class_">QRCode</span>.<span class="title function_">toFile</span>(</span><br><span class="line">  <span class="string">&#x27;foo.png&#x27;</span>,</span><br><span class="line">  [&#123; <span class="attr">data</span>: [<span class="number">253</span>,<span class="number">254</span>,<span class="number">255</span>], <span class="attr">mode</span>: <span class="string">&#x27;byte&#x27;</span> &#125;], <span class="comment">// mode为二进制模式</span></span><br><span class="line">  ...options...,</span><br><span class="line">  ...callback...</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>我们一般成二维码会用到canvas或者svg格式，然后我们知道小程序里其实是可以用 base64 化的 svg 做为图片的 src, 如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;image src=&#x27;data:image/svg+xml;base64,...&#x27;/&gt;</span><br></pre></td></tr></table></figure><p>所以我只能另找一个可以转成 svg 并且支持二进制模式的库就好了。但是很可惜，我没有找到，但是这个库<a href="https://github.com/kazuhikoarase/qrcode-generator">qrcode-generator</a>却有方法 可以添加数据处理， 我尝试将我的数据这个方法转为 binary 后终于成功了, 下面是具体代码</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">QRCode</span> <span class="keyword">from</span> <span class="string">&quot;qrcode-generator&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hexToBytes</span>(<span class="params">hex: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> bytes = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> c = <span class="number">0</span>; c &lt; hex.<span class="property">length</span>; c += <span class="number">2</span>) &#123;</span><br><span class="line">        bytes.<span class="title function_">push</span>(<span class="built_in">parseInt</span>(hex.<span class="title function_">substr</span>(c, <span class="number">2</span>), <span class="number">16</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bytes;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">genQRcordBinImg</span> = (<span class="params">data: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="title class_">QRCode</span>.<span class="property">stringToBytes</span> = hexToBytes;</span><br><span class="line">    <span class="keyword">const</span> typeNumber = <span class="number">0</span>; <span class="comment">// 0 is auto</span></span><br><span class="line">    <span class="keyword">const</span> errorCorrectionLevel = <span class="string">&quot;L&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> qr = <span class="title class_">QRCode</span>(typeNumber, errorCorrectionLevel);</span><br><span class="line">    qr.<span class="title function_">addData</span>(data, <span class="string">&quot;Byte&quot;</span>);</span><br><span class="line">    qr.<span class="title function_">make</span>();</span><br><span class="line">    <span class="keyword">const</span> rst = qr.<span class="title function_">createSvgTag</span>(<span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`data:image/svg+xml;base64,<span class="subst">$&#123;btoa(rst)&#125;</span>`</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> qrCodeImg = <span class="title function_">genQRcordBinImg</span>(</span><br><span class="line">    <span class="string">&quotquot;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">:src</span>=<span class="string">&quot;qrCodeImg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;最近在为我们的公交小程序添加二维码功能，挺简单的需求对吧？我整了好两天了，我原本以为一个二维码能有什么复杂的，文本是什么内容，扫出来是什么内容就</summary>
      
    
    
    
    
    <category term="小程序" scheme="http://aizigao.xyz/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="个人笔记" scheme="http://aizigao.xyz/tags/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    <category term="web 前端" scheme="http://aizigao.xyz/tags/web-%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>什么是良好的工作状态(TODO)</title>
    <link href="http://aizigao.xyz/2020/02/23/%E4%BB%80%E4%B9%88%E6%98%AF%E8%89%AF%E5%A5%BD%E7%9A%84%E5%B7%A5%E4%BD%9C%E7%8A%B6%E6%80%81/"/>
    <id>http://aizigao.xyz/2020/02/23/%E4%BB%80%E4%B9%88%E6%98%AF%E8%89%AF%E5%A5%BD%E7%9A%84%E5%B7%A5%E4%BD%9C%E7%8A%B6%E6%80%81/</id>
    <published>2020-02-23T06:17:54.000Z</published>
    <updated>2023-08-20T14:33:16.626Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>我在压力大时，不自觉的读文档会囫囵吞枣,这样会漏掉很多东西</p><ul><li>掌握目录， 梳理作者的流程</li><li>提出关键点</li><li>番茄化</li><li>分阶段化</li><li>制定计划</li></ul></li><li><p>学习新的理论的流程是怎么样的？</p><ul><li>看理论</li><li>跑demo</li><li>运用一下</li><li>过详细文档</li><li>我怎么把刚刚的文档 用自已的粗俗语言组织一下</li><li>源码学习</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;我在压力大时，不自觉的读文档会囫囵吞枣,这样会漏掉很多东西&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;掌握目录， 梳理作者的流程&lt;/li&gt;
&lt;li&gt;提出关键点&lt;/li&gt;
&lt;li&gt;番茄化&lt;/li&gt;
&lt;li&gt;分阶段化&lt;/li&gt;
&lt;li&gt;制定计划&lt;/li&gt;
&lt;/ul&gt;
&lt;/l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>如何独自开展一个项目(TODO)</title>
    <link href="http://aizigao.xyz/2020/02/23/%E5%A6%82%E4%BD%95%E7%8B%AC%E8%87%AA%E5%BC%80%E5%B1%95%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/"/>
    <id>http://aizigao.xyz/2020/02/23/%E5%A6%82%E4%BD%95%E7%8B%AC%E8%87%AA%E5%BC%80%E5%B1%95%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-02-23T06:16:13.000Z</published>
    <updated>2023-08-20T14:33:29.490Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>前期有准备什么</p><ul><li>技术调研？</li><li>业务分析</li><li>考虑好流程</li></ul></li><li><p>开发中</p><ul><li>目录设计</li><li>项目分割</li><li>分批次计划</li><li>制定时间表</li></ul></li><li><p>上线</p><ul><li>运维</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;前期有准备什么&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;技术调研？&lt;/li&gt;
&lt;li&gt;业务分析&lt;/li&gt;
&lt;li&gt;考虑好流程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开发中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目录设计&lt;/li&gt;
&lt;li&gt;项目分割&lt;/li&gt;
&lt;li&gt;分</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>键盘上所有特殊符号的英文读法及希腊字母表</title>
    <link href="http://aizigao.xyz/2019/11/23/%E9%94%AE%E7%9B%98%E4%B8%8A%E6%89%80%E6%9C%89%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E7%9A%84%E8%8B%B1%E6%96%87%E8%AF%BB%E6%B3%95/"/>
    <id>http://aizigao.xyz/2019/11/23/%E9%94%AE%E7%9B%98%E4%B8%8A%E6%89%80%E6%9C%89%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E7%9A%84%E8%8B%B1%E6%96%87%E8%AF%BB%E6%B3%95/</id>
    <published>2019-11-23T06:31:50.000Z</published>
    <updated>2023-08-20T14:33:43.606Z</updated>
    
    <content type="html"><![CDATA[<h2 id="键盘上所有特殊符号的英文读法"><a class="markdownIt-Anchor" href="#键盘上所有特殊符号的英文读法"></a> 键盘上所有特殊符号的英文读法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">! 叹号 exclamation mark/bang  </span><br><span class="line">? 问号 question mark  </span><br><span class="line">, 逗号 comma  </span><br><span class="line">. 点号 dot/period/point  </span><br><span class="line">: 冒号 colon  </span><br><span class="line">; 分号 semicolon  </span><br><span class="line">” 双引号 quotation marks/double quote  </span><br><span class="line">‘ 单引号/撇号 apostrophe/single quote  </span><br><span class="line">` 重音号 backquote/grave accent  </span><br><span class="line">* 星号 asterisk/star  </span><br><span class="line">+ 加号 plus sign</span><br><span class="line">- 减号/横线 hyphen/dash/minus sign/  </span><br><span class="line">= 等号 equal sign  </span><br><span class="line">/ 斜线 slash  </span><br><span class="line">\ 反斜线 backslash/escape  </span><br><span class="line">| 竖线 bar/pipe/vertical bar  </span><br><span class="line">_ 下划线 underline/underscore  </span><br><span class="line">$ 美元符号 dollar sign  </span><br><span class="line">@ at at sign  </span><br><span class="line">\# 井号 crosshatch/sharp/hash  </span><br><span class="line">% 百分号 percent sign/mod  </span><br><span class="line">&amp; and/和/兼 and/ampersand  </span><br><span class="line">^ 折音号 circumflex/caret  </span><br><span class="line">~ 波浪号 tilde  </span><br><span class="line">&#123;&#125; （左右）花括号/大括号 (left/right|open/close) braces  </span><br><span class="line">[] （左右）方括号/中括号 (left/right|open/close) brackets  </span><br><span class="line">() （左右）圆括号/小括号 (left/right|open/close) parentheses  </span><br><span class="line">&lt;&gt; 尖括号 angle brackets  </span><br><span class="line">&lt; 大于号 less than  </span><br><span class="line">&gt; 小于号 greater than  </span><br></pre></td></tr></table></figure><h2 id="葡语中的变音符号diacritic-mark在英文中的读法"><a class="markdownIt-Anchor" href="#葡语中的变音符号diacritic-mark在英文中的读法"></a> 葡语中的变音符号（diacritic mark）在英文中的读法：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">^ circumflex/caret  </span><br><span class="line">~ tilde/squiggle  </span><br><span class="line">´ acute  </span><br><span class="line">` grave  </span><br><span class="line">ç cedilla  </span><br></pre></td></tr></table></figure><h2 id="希腊字母表"><a class="markdownIt-Anchor" href="#希腊字母表"></a> 希腊字母表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">α　Α　alpha /alpha/ h表示送气音，在古希腊语中尚没有音位/f/，所以/pha/的发音类似普通话的“趴”。  </span><br><span class="line">  </span><br><span class="line">β　Β　beta /be:ta/ /e:/表示长元音，/e/的发音不是英语D.J.音标里的\[e\]，而类似K.K.音标里的/e/或者法语的/e/。/t/不送气，所以/ta/类似普通话“搭”而不是“他”。  </span><br><span class="line">  </span><br><span class="line">γ　Γ　gamma /gam:a/　/m:/表示长辅音，即在发辅音时，其持阻阶段应该适当延长，然后再做除阻动作。  </span><br><span class="line">  </span><br><span class="line">δ　Δ　delta /de:lta/  </span><br><span class="line">  </span><br><span class="line">ε　Ε　epsilon /epsilo:n/ /o/的发音要比英国英语字母组合au的发音更闭一些。  </span><br><span class="line">  </span><br><span class="line">ζ　Ζ　zeta /ze:ta, dze:ta/ /z, dz/浊的塞音或塞擦音。  </span><br><span class="line">  </span><br><span class="line">η　Η　eta /e:ta/ 第一个音节为长音。  </span><br><span class="line">  </span><br><span class="line">θ　Θ　theta /the:ta/ /th/表示送气音，t为齿化的(dentalised)塞音，而不是英语里的/t/，类似汉语里的t，但要更紧一些。  </span><br><span class="line">  </span><br><span class="line">ι　Ι　iota /jo:ta，io:ta/  </span><br><span class="line">  </span><br><span class="line">κ　Κ　kappa /kap:a/ /p:/表示长辅音，其描述类似/m:/，前一个p类似于英语里“失去爆破”或者汉语粤方言中的塞音韵尾/-p/，/k/不送气。  </span><br><span class="line">  </span><br><span class="line">λ　Λ　lambda /lambda/  </span><br><span class="line">  </span><br><span class="line">μ　Μ　my /my:/ /y:/是长元音，类似汉语的“淤”以及法语字母u单独存在时的发音。  </span><br><span class="line">  </span><br><span class="line">ν　Ν　ny /ny:/  </span><br><span class="line">  </span><br><span class="line">ξ　Ξ　xi /ksi:/  </span><br><span class="line">  </span><br><span class="line">ο　Ο　omicron /omikro:n/ micron表示“小”，所以是“短o”的意思。  </span><br><span class="line">  </span><br><span class="line">π　Π　pi /pi:/ /p/不送气，所以应该类似“逼”而不是“批”。  </span><br><span class="line">  </span><br><span class="line">ρ　Ρ　rho /rho:/ /rh/实际上表示清化的擦颤音，这里打不出来，姑且用这个组合吧。据说捷克语里有，这就是为什么Dvorak被翻译为“德沃夏克”而不是“德沃拉克”的原因。据说古希腊语有两个颤音，一个是词头的擦颤音，一个是词尾的成音节的真正浊颤音，所以希腊字母标里有两个rho，一个只用在词头，一个只用在词尾。  </span><br><span class="line">  </span><br><span class="line">σ　Σ　sigma /sigma/ /s/为齿化的，类似汉语的s-，而不是英语的\[s\]。与rho类似希腊字母表里也有两个sigma，一个在词头，一个在词尾，据说在词尾的也能成音节，会不会读得象汉语的“丝”一样就不得而知了。  </span><br><span class="line">  </span><br><span class="line">τ　Τ　tau /tau,tay?/ 后面一部分得读音不得而知，/u/还是/y/？/t/不送气，所以应该类似“搭屋”/“搭淤”，而非“套”。  </span><br><span class="line">  </span><br><span class="line">υ　Υ　ypsilon /y:psilo:n/ /y/类似汉语的“淤”而非“乌”，拉丁语里没有这个音，所以字母命名为 igraeca，即“希腊的i”的意思。与/i/部位相同，但是圆唇元音。  </span><br><span class="line">  </span><br><span class="line">φ　Φ　phi /phi:/ /ph/表示送气音，所以应该类似“批”。  </span><br><span class="line">  </span><br><span class="line">χ　Χ　chi /khi:/ c在古代拉丁语里的读音总是为/k/，/kh/为送气音。  </span><br><span class="line">  </span><br><span class="line">ψ　Ψ　psi /psi:/  </span><br><span class="line">  </span><br><span class="line">ω　Ω　omega /o:me:ga/ /o:/是长音，因为mega表示大的意思，即“大的o”</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;键盘上所有特殊符号的英文读法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#键盘上所有特殊符号的英文读法&quot;&gt;&lt;/a&gt; 键盘上所有特殊符号的英文读法&lt;/h2&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;ta</summary>
      
    
    
    
    
    <category term="英语" scheme="http://aizigao.xyz/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>本地配置https及设备导入证书</title>
    <link href="http://aizigao.xyz/2019/09/18/%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AEhttps%E5%8F%8A%E8%AE%BE%E5%A4%87%E5%AF%BC%E5%85%A5%E8%AF%81%E4%B9%A6/"/>
    <id>http://aizigao.xyz/2019/09/18/%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AEhttps%E5%8F%8A%E8%AE%BE%E5%A4%87%E5%AF%BC%E5%85%A5%E8%AF%81%E4%B9%A6/</id>
    <published>2019-09-18T13:20:30.000Z</published>
    <updated>2023-08-20T14:34:03.249Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>平时开发时可能需要本地试下 https 的功能，要不正式上线时，http 和 https 会有一定的跨域的风险；<br />如果突然想要使用正式环境的 https 的接口，配置一下 https 也是少不了的</p><h2 id="方案"><a class="markdownIt-Anchor" href="#方案"></a> 方案</h2><h3 id="1-找个路径生成一下证书"><a class="markdownIt-Anchor" href="#1-找个路径生成一下证书"></a> 1. 找个路径生成一下证书</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">openssl req \</span><br><span class="line">    -newkey rsa:2048 \</span><br><span class="line">    -x509 \</span><br><span class="line">    -nodes \</span><br><span class="line">    -keyout server.key \ #导出的key名</span><br><span class="line">    -new \</span><br><span class="line">    -out server.crt \ # 导出的crt名</span><br><span class="line">    -subj /CN=m.test.com \ #写你的域名</span><br><span class="line">    -reqexts SAN \</span><br><span class="line">    -extensions SAN \</span><br><span class="line">    -config &lt;(cat /System/Library/OpenSSL/openssl.cnf \</span><br><span class="line">        &lt;(printf &#x27;[SAN]\nsubjectAltName=DNS:m.test.com&#x27;)) \ #写入你的域名</span><br><span class="line">    -sha256 \</span><br><span class="line">    -days 365 #有效期一个365, 只有小于365才能在android上生效</span><br></pre></td></tr></table></figure><blockquote><p>android 高版本后只有系统级证书会生效，见 <a href="https://blog.nviso.eu/2020/11/19/proxying-android-app-traffic-common-issues-checklist/">https://blog.nviso.eu/2020/11/19/proxying-android-app-traffic-common-issues-checklist/</a></p></blockquote><h3 id="2-导入-nginx-ssl-是-443-端口需要导入"><a class="markdownIt-Anchor" href="#2-导入-nginx-ssl-是-443-端口需要导入"></a> 2. 导入 nginx, ssl 是 443 端口，需要导入</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">  <span class="attribute">server_name</span> test.com;</span><br><span class="line">  <span class="attribute">ssl_certificate</span> /Users/martin/MyWorkPlace/test2/dev/server.crt;</span><br><span class="line">  <span class="attribute">ssl_certificate_key</span> /Users/martin/MyWorkPlace/test2/dev/server.key;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-mac-下导入证书"><a class="markdownIt-Anchor" href="#3-mac-下导入证书"></a> 3. mac 下导入证书</h3><p>mac 双击打开 server.crt，然后在钥匙串里选择 aways trust</p><p><img src="https://aizigao-blog-1257747336.cos.ap-shanghai.myqcloud.com/20190918212146.png" alt="mac下导入证书" /></p><h3 id="4-ios-下导入证书"><a class="markdownIt-Anchor" href="#4-ios-下导入证书"></a> 4. ios 下导入证书</h3><p>手机域名绑定啥的我的用 charles 代理过去的</p><p>ios 导入证书只能通入自带的 safari,邮箱可能也可以，我没有试过。我的做法<br />在 server.crt 文件夹内起个服务器,这里我用的是 npm 的 http-server，没有的就按下面的方式安装一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g http-server</span><br></pre></td></tr></table></figure><p>启动 http-server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http-server</span><br></pre></td></tr></table></figure><p>ios 下载完成后，弹出弹窗</p><p>然后进入<code>设置-&gt;通用-&gt;关于本机-&gt;证书信任设置</code>安装描述文件</p><h3 id="5-安卓下导入证书"><a class="markdownIt-Anchor" href="#5-安卓下导入证书"></a> 5. 安卓下导入证书</h3><h3 id="6-清除-https"><a class="markdownIt-Anchor" href="#6-清除-https"></a> 6. 清除 https</h3><h4 id="chrome"><a class="markdownIt-Anchor" href="#chrome"></a> chrome</h4><ul><li>url 输入 <code>chrome://net-internals/#hsts</code></li><li>在 <code>Delete domain security policies</code> 输入你要删除的域名，<strong>注意的如是多级域名,最好一级二级都删一遍</strong>,如<code>second.first.test.com</code> 最好输入以下都删一遍<ul><li><a href="http://second.first.test.com">second.first.test.com</a></li><li><a href="http://first.test.com">first.test.com</a></li><li><a href="http://test.com">test.com</a></li></ul></li></ul><h4 id="手机"><a class="markdownIt-Anchor" href="#手机"></a> 手机</h4><p><em>手机中清除 https 比较麻烦，能用隐私模式就用隐私模式吧, 有通用方案的同学请告知</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;平时开发时可能需要本地试下 https 的功能，要不正式上线时，http 和 https 会有一定的跨域的风险；&lt;br /&gt;
如果突然想要使用正</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>用户认证好多种？ 我要学习一下了</title>
    <link href="http://aizigao.xyz/2019/08/23/%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%A5%BD%E5%A4%9A%E7%A7%8D%EF%BC%9F-%E6%88%91%E8%A6%81%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%B8%8B%E4%BA%86/"/>
    <id>http://aizigao.xyz/2019/08/23/%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%A5%BD%E5%A4%9A%E7%A7%8D%EF%BC%9F-%E6%88%91%E8%A6%81%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%B8%8B%E4%BA%86/</id>
    <published>2019-08-23T11:45:34.000Z</published>
    <updated>2023-08-20T14:33:58.497Z</updated>
    
    <content type="html"><![CDATA[<p>做了开发几年，登录这块的东西一直了解不多，因为实现的方式有挺多的，我现在要系统的学习一下, 了解一下他们的原理。 目前看了几篇博客，这篇为收集用，之后会用 node 或 java 尝试的写一下。</p><h2 id="cookie-session-认证"><a class="markdownIt-Anchor" href="#cookie-session-认证"></a> Cookie-Session 认证</h2><p>我上家公司用的这种方式</p><h3 id="流程"><a class="markdownIt-Anchor" href="#流程"></a> 流程</h3><p>认证过程大致如下：</p><ol><li><p>用户输入用户名、密码或者用短信验证码方式登录系统；</p></li><li><p>服务端验证后，创建一个 Session 信息，并且将 SessionID 存到 cookie，发送回浏览器；</p></li><li><p>下次客户端再发起请求，自动带上 cookie 信息，服务端通过 cookie 获取 Session 信息进行校验；<br />弊端</p></li><li><p>只能在 web 场景下使用，如果是 APP 中，不能使用 cookie 的情况下就不能用了(app 里用 http 协议)；</p></li><li><p>即使能在 web 场景下使用，也要考虑跨域问题，因为 cookie 不能跨域(跨域方案, nginx/CORS)；</p></li><li><p>cookie 存在 CSRF（跨站请求伪造）的风险(http-only|https 的下 cookie 设置 secure)；</p></li><li><p>如果是分布式服务，需要考虑 Session 同步问题(redis)；</p></li></ol><h3 id="cookie-session-改造版"><a class="markdownIt-Anchor" href="#cookie-session-改造版"></a> Cookie-Session 改造版</h3><p>由于传统的 Cookie-Session 认证存在诸多问题，可以把上面的方案改造一下。改动的地方如下：</p><ul><li>不用 cookie 做客户端存储，改用其他方式，web 下使用 local storage，APP 中使用客户端数据库，这样就实现了跨域，并且避免了 CSRF ;</li><li>服务端也不存 Session 了，把 Session 信息拿出来存到 Redis 等内存数据库中，这样即提高了速度，又避免了 Session 同步问题；</li></ul><p>经过改造之后变成了如下的认证过程：</p><ol><li>用户输入用户名、密码或者用短信验证码方式登录系统；</li><li>服务端经过验证，将认证信息构造好的数据结构存储到 Redis 中，并将 key 值返回给客户端；</li><li>客户端拿到返回的 key，存储到 local storage 或本地数据库；</li><li>下次客户端再次请求，把 key 值附加到 header 或者 请求体中；</li><li>服务端根据获取的 key，到 Redis 中获取认证信息；</li></ol><h2 id="jwt"><a class="markdownIt-Anchor" href="#jwt"></a> JWT</h2><p>上面的方案虽然经过了改版，但还是需要客户端和服务器端维持一个状态信息，比如用 cookie 换 session ,或者用 key 换 Redis 的 value 信息，基于 JWT 的 Token 认证方案可以省去这个过程。</p><h3 id="认证过程"><a class="markdownIt-Anchor" href="#认证过程"></a> 认证过程</h3><ol><li>依然是用户登录系统；</li><li>服务端验证，将认证信息通过指定的算法（例如 HS256）进行加密，例如对用户名和用户所属角色进行加密，加密私钥是保存在服务器端的，将加密后的结果发送给客户端，加密的字符串格式为三个&quot;.&quot; 分隔的字符串 Token，分别对应<strong>头部</strong>、<strong>载荷</strong>与<strong>签名</strong>，头部和载荷都可以通过 base64 解码出来，签名部分不可以；</li><li>客户端拿到返回的 Token，存储到 local storage 或本地数据库；</li><li>下次客户端再次发起请求，将 Token 附加到 header 中；</li><li>服务端获取 header 中的 Token ，通过相同的算法对 Token 中的用户名和所属角色进行相同的加密验证，如果验证结果相同，则说明这个请求是正常的，没有被篡改。这个过程可以完全不涉及到查询 Redis 或其他存储；</li></ol><p><strong>优点</strong></p><ul><li>使用 json 作为数据传输，有广泛的通用型，并且体积小，便于传输；</li><li>不需要在服务器端保存相关信息；</li><li>jwt 载荷部分可以存储业务相关的信息（非敏感的），例如用户信息、角色等；</li></ul><p>TODO: 实现</p><h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2><h2 id="auth2"><a class="markdownIt-Anchor" href="#auth2"></a> Auth2</h2><p>wiki:</p><blockquote><p>TODO: 添加 wiki</p></blockquote><p>第三方认证，Auth 也分好多种， 我看了阮老师的文章，主要下面几种</p><h2 id="强制退登只允许一个用户登录-sso"><a class="markdownIt-Anchor" href="#强制退登只允许一个用户登录-sso"></a> 强制退登，只允许一个用户登录 SSO</h2><h2 id="参考文章"><a class="markdownIt-Anchor" href="#参考文章"></a> 参考文章</h2><p>感谢网上的大佬的指导了</p><ul><li><a href="https://www.cnblogs.com/fengzheng/p/8416393.html">说一说几种常用的登录认证方式，你用的哪种 - 风的姿态 - 博客园</a></li><li><a href="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html">理解 OAuth 2.0 - 阮一峰的网络日志</a></li><li><a href="http://www.ruanyifeng.com/blog/2019/04/oauth-grant-types.html">OAuth 2.0 的四种方式 - 阮一峰的网络日志</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;做了开发几年，登录这块的东西一直了解不多，因为实现的方式有挺多的，我现在要系统的学习一下, 了解一下他们的原理。 目前看了几篇博客，这篇为收集用，之后会用 node 或 java 尝试的写一下。&lt;/p&gt;
&lt;h2 id=&quot;cookie-session-认证&quot;&gt;&lt;a class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>流畅使用CURL与后端撕B</title>
    <link href="http://aizigao.xyz/2019/08/02/%E6%B5%81%E7%95%85%E4%BD%BF%E7%94%A8CURL%E4%B8%8E%E5%90%8E%E7%AB%AF%E6%92%95B/"/>
    <id>http://aizigao.xyz/2019/08/02/%E6%B5%81%E7%95%85%E4%BD%BF%E7%94%A8CURL%E4%B8%8E%E5%90%8E%E7%AB%AF%E6%92%95B/</id>
    <published>2019-08-02T06:45:25.000Z</published>
    <updated>2023-08-20T14:34:00.999Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是-curl"><a class="markdownIt-Anchor" href="#什么是-curl"></a> 什么是 CURL</h2><p>curl，全称 CommandLine URL 或 CommandLine Uniform Resource Locator， <code>curl</code> 是在命令行方式下工作，利用 URL 的语法进行数据的传输或者文件的传输, 你就单纯把它当成一个能在终端里发送完整的请求的方式就好了。 这个命令行工具在 Unix 和 Linux 操作系统下都自带，是一个开源的工具，功能十分强大, window下可以装上 <code>git-bash</code> 也会有，约等于大家电脑里都有。</p><p>下面是 curl 的官方网站，我们可以该网站获取该工具的最新版本，还有最全面的使用方法。<br />我们复制出一个 CURL 请求（csdn 的一个接口）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl &#x27;https://msg.csdn.net/v1/chrome/notification/view&#x27; -X OPTIONS -H &#x27;Access-Control-Request-Method: POST&#x27; -H &#x27;Origin: https://blog.csdn.net&#x27; -H &#x27;Referer: https://blog.csdn.net/deliciousion/article/details/78062521&#x27; -H &#x27;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36&#x27; -H &#x27;Access-Control-Request-Headers: content-type&#x27; --compressed</span><br></pre></td></tr></table></figure><p>从上面可以看出一个完整的 CURl 带有些完整的 http 信息,具体的 CURL 的参数与用法可以参考其它的文章,这里主要讲下 CURL 在日常开发中的使用</p><h2 id="如何撕-b"><a class="markdownIt-Anchor" href="#如何撕-b"></a> 如何撕 B</h2><p>我们前端开发人员在与后端人员联调时，我们往往会使用 postman 这样的 gui 工具进行调试，可是 postman 毕竟还是要手动的一个输入一个个的参数,这个会比较麻烦.</p><p><img src="https://i.loli.net/2019/08/02/5d43da6b53c9a98298.png" alt="" /></p><p>试想一下这个场景,当你在写一个很大很复杂的表单，和后端调试需要很长时间, 每次都需要重新填写表单，然后又因为这个调试没法子切到其它工作,这会非常浪费时间。按常理来说，这是后端需要自已测试通过后才行，但是工作场景下确实经常有这个问题发生。</p><p>所以这个时候你可以打开 <em>chrome 控制台</em>下的 XHR 下的右键复制 CURL 功能,然后把得制下来的 CURL 发经后端开发的同学，之后就可以继续其它工作了。</p><p><img src="https://i.loli.net/2019/08/02/5d43da6b53c9a98298.png" alt="" /></p><p><img src="https://i.loli.net/2019/08/02/5d43dbaf1a25d53570.png" alt="" /></p><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2><p>后续可以也可以再多了解一下 <code>curl</code> 的格式，这个东西其实可以做很多事情，大体上可以代替 <code>postman</code>　的大部分功能了，比如文件上传什么的；在终端上用，之后写个脚本啥的也会比较方便。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是-curl&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是-curl&quot;&gt;&lt;/a&gt; 什么是 CURL&lt;/h2&gt;
&lt;p&gt;curl，全称 CommandLine URL 或 CommandLine Uniform Resource</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Manjaro i3wm 一些蓝牙音箱/耳机相关的配置</title>
    <link href="http://aizigao.xyz/2019/07/30/Manjaro-i3wm-%E4%B8%80%E4%BA%9B%E8%93%9D%E7%89%99%E9%9F%B3%E7%AE%B1-%E8%80%B3%E6%9C%BA%E7%9B%B8%E5%85%B3%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>http://aizigao.xyz/2019/07/30/Manjaro-i3wm-%E4%B8%80%E4%BA%9B%E8%93%9D%E7%89%99%E9%9F%B3%E7%AE%B1-%E8%80%B3%E6%9C%BA%E7%9B%B8%E5%85%B3%E7%9A%84%E9%85%8D%E7%BD%AE/</id>
    <published>2019-07-30T10:52:27.000Z</published>
    <updated>2023-08-20T14:33:03.705Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>最近又因为系统的一些莫名问题，导致我又重装了一变manjaro i3版本，这个版本的蓝牙毛病挺多的，记录一下，下次好找(虽然已经备份好了dotfile了)</p><h2 id="问题与解决方案"><a class="markdownIt-Anchor" href="#问题与解决方案"></a> 问题与解决方案</h2><h3 id="耳机连接后没有声音"><a class="markdownIt-Anchor" href="#耳机连接后没有声音"></a> 耳机连接后没有声音</h3><p>缺少模块,安装 <code>pulseaudio-bluetooth</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S pulseaudio-bluetooth</span><br></pre></td></tr></table></figure><h3 id="连接后音量无法调节"><a class="markdownIt-Anchor" href="#连接后音量无法调节"></a> 连接后音量无法调节</h3><p>默认的音量调节为volumeicon, 改为  <code>pa-applet</code>就好了, 安装 <code>pa-applet</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S pa-applet</span><br></pre></td></tr></table></figure><p>修改 <code>~/.i3/config</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-- 注释它</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">exec</span> --no-startup-id volumeicon</span></span><br><span class="line">exec --no-startup-id pa-applet</span><br></pre></td></tr></table></figure><h3 id="蓝牙音箱或耳机链接后电脑不会切换播放设备-需要重启应用才生效g"><a class="markdownIt-Anchor" href="#蓝牙音箱或耳机链接后电脑不会切换播放设备-需要重启应用才生效g"></a> 蓝牙音箱或耳机链接后，电脑不会切换播放设备, 需要重启应用才生效G</h3><p>修改配置 /etc/pulse/default.pa</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 添加这一行</span><br><span class="line">load-module module-switch-on-connect</span><br></pre></td></tr></table></figure><h3 id="电脑重启后不会自动链接"><a class="markdownIt-Anchor" href="#电脑重启后不会自动链接"></a> 电脑重启后，不会自动链接</h3><p>这个比较傻了，在<code>blueman</code> 蓝牙管理器里打开 <code>蓝牙一直可见</code> 就好了</p><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2><p>为了用个蓝牙耳机，整得确实挺麻烦的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;最近又因为系统的一些莫名问题，导致我又重装了一变manjaro i3版本，这个版本的蓝牙毛病挺多的，记录一下，下次好找(虽然已经备份好了dotf</summary>
      
    
    
    
    
    <category term="linux" scheme="http://aizigao.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>使用yadm (git)管理系统配置文件(dotfiles)</title>
    <link href="http://aizigao.xyz/2019/07/29/%E4%BD%BF%E7%94%A8yadm-git-%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-dotfiles/"/>
    <id>http://aizigao.xyz/2019/07/29/%E4%BD%BF%E7%94%A8yadm-git-%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-dotfiles/</id>
    <published>2019-07-29T12:06:41.000Z</published>
    <updated>2023-08-20T14:33:22.726Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>linux 和 macos下大部分的软件配置文件都是在用户目录对应以 “.”打开的隐藏文件或者是xxxrc 命名的文件，其余的基本上配置也有放在<code>.config</code>目录下的。 一般来说只要备份好这些dotfiles 另写一个系统初始化的脚本，在做系统重装或系统迁移时就会比较的方便了。</p><p>之前一直在用 <a href="https://github.com/lra/mackup">mackup</a> 做为管理工具, 但是使用下来个人感觉是不很满意</p><ul><li>备份文件用的是软链接，不是很喜欢这种方式，很不好管理, 移除mackup时会比较麻烦, 感觉有一定的入侵性</li><li>数据同步一般用网盘或者手动git的方式，用网盘的话，测不能做到的版本控制, 每次修改完文件后不能回滚</li></ul><p>最近逛reddit时，发现一个名为<a href="https://yadm.io">yadm</a> 的管理工具，作法是默认将整个用户目录处理为一个git仓库但不会影响到正常的git使用，因为方案是用git管理，好处理就不用多说了，cli使用上也和git大体相同。</p><h2 id="基本使用"><a class="markdownIt-Anchor" href="#基本使用"></a> 基本使用</h2><p><a href="%5Bhttps://yadm.io/docs/install#ubuntudebian%5D(https://yadm.io/docs/install#ubuntudebian)">走一下官方的流程</a></p><p>我当前的设备为一台manjaro的系统, 使用yay为包管理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装</span></span><br><span class="line">yay  yadm</span><br><span class="line"><span class="meta prompt_"># </span></span><br></pre></td></tr></table></figure><p>基本使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yadm init</span><br><span class="line">yadm add &lt;important file&gt;</span><br><span class="line">yadm commit</span><br><span class="line">yadm init</span><br><span class="line">yadm add &lt;important file&gt;</span><br><span class="line">yadm commit</span><br></pre></td></tr></table></figure><p>可以看到的yadm的用法和<code>git</code>本身一毛一样，会用<code>git</code>就会用<code>yadm</code>,  因为基于git，对配置文件做分支管理，版本回滚都很方便。并且不像mackup那样用<code>ln</code>， 入侵性很低。</p><h2 id="系统级用法"><a class="markdownIt-Anchor" href="#系统级用法"></a> 系统级用法</h2><p>默认yadm 控制范围是 home目录的，如果你想把 <code>/etc</code> 目录下的内容也管理进来的话，我试了两个方案。</p><ul><li>配置 <code>yadm</code>的控制范围为 <code>/</code></li><li>使用<code>ln</code> 将系统的文件链接到home目录下</li></ul><h3 id="配置-yadm的控制范围为"><a class="markdownIt-Anchor" href="#配置-yadm的控制范围为"></a> 配置 <code>yadm</code>的控制范围为 <code>/</code></h3><p>默认使用 root用户时，控制范围就是 ‘/’, 翻阅yadm 的<a href="https://github.com/TheLocehiliosan/yadm/issues/63">issue</a> ，也可以同时更改一下config目录, 并加一个alias进行处理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">create an <span class="built_in">alias</span> to run yadm <span class="keyword">for</span> system files</span></span><br><span class="line">alias sysyadm=&quot;sudo yadm -Y /etc/yadm&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">initialize the yadm repo using the worktree of <span class="string">&quot;/&quot;</span></span></span><br><span class="line">sysyadm init -w /</span><br></pre></td></tr></table></figure><h3 id="使用ln-将系统的文件链接到home目录下"><a class="markdownIt-Anchor" href="#使用ln-将系统的文件链接到home目录下"></a> 使用<code>ln</code> 将系统的文件链接到home目录下</h3><p>个人当前用 <code>ln</code>方式管理系统级的文件，因为不同系统下结构确实也有一些不同，系统级的配置也不会太多，就不做整个系统的管理了，当前我建立了 <code>~/.config/systemrc</code> 文件夹，将系统级的文件都软链到这个目录下，如hosts文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s -f /home/aizigao/.config/systemrc/etc/hosts /etc/hosts</span><br></pre></td></tr></table></figure><h2 id="忽略文件"><a class="markdownIt-Anchor" href="#忽略文件"></a> 忽略文件</h2><p>平时开发时，习惯性直接 <code>git add ./</code> 添加针对整个目录的管理，但是有些日志文件不小心就会被打进去了，如我的rime配置目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── build</span><br><span class="line">├── default.custom.yaml</span><br><span class="line">├── double_pinyin_flypy.schema.yaml</span><br><span class="line">├── installation.yaml</span><br><span class="line">├── luna_pinyin.userdb</span><br><span class="line">├── pinyin_simp.dict.yaml</span><br><span class="line">├── pinyin_simp.schema.yaml</span><br><span class="line">├── sync</span><br><span class="line">├── user.yaml</span><br><span class="line">├── xinshijiwubi.dict.yaml</span><br><span class="line">├── xinshijiwubi.schema.yaml</span><br><span class="line">├── xinshijiwubi.userdb</span><br></pre></td></tr></table></figure><p>我只有管理部分文件，又不想一个一个的<code>yadm add</code>，这时就建一个<code>.gitignore</code>就好了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">build</span><br><span class="line">*.userdb</span><br></pre></td></tr></table></figure><h2 id="自用的alias"><a class="markdownIt-Anchor" href="#自用的alias"></a> 自用的alias</h2><p>由于系统的配置文件还是比较分散的，加了一个alias做修改过的文件的add</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias yadm_add_m =&#x27;yadm ls-files --modified | xargs yadm add&#x27;</span><br></pre></td></tr></table></figure><h2 id="其它"><a class="markdownIt-Anchor" href="#其它"></a> 其它</h2><ul><li>看了文档，yadm还可以支持文件加密啥的，因为我用了github的私有仓库，这个就没有使用</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;linux 和 macos下大部分的软件配置文件都是在用户目录对应以 “.”打开的隐藏文件或者是xxxrc 命名的文件，其余的基本上配置也有放在</summary>
      
    
    
    
    
  </entry>
  
</feed>
